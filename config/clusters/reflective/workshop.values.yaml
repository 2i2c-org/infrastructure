nfs:
  pv:
    serverIP: 10.100.92.0
userServiceAccount:
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::916143380841:role/reflective-workshop
jupyterhub:
  custom:
    2i2c: {}
    homepage:
      templateVars:
        learn_more: |
          For more information about using this resource, see our
          <a href="For more information about using this resource, see our Jupyter-book">
            Jupyter-book
          </a>
    singleuserAdmin:
      extraVolumeMounts: []
  ingress:
    hosts: [workshop.reflective.2i2c.cloud]
    tls:
    - hosts: [workshop.reflective.2i2c.cloud]
      secretName: https-auto-tls
  hub:
    config:
      GitHubOAuthenticator: {}
      JupyterHub:
        authenticator_class: dummy
      Authenticator:
        admin_users: []
        enable_auth_state: false
        manage_groups: false
  singleuser:
    nodeSelector:
      2i2c/hub-name: workshop
    extraEnv:
      SCRATCH_BUCKET: s3://reflective-scratch-workshop/$(JUPYTERHUB_USER)
      PANGEO_SCRATCH: s3://reflective-scratch-workshop/$(JUPYTERHUB_USER)
      PERSISTENT_BUCKET: s3://reflective-persistent-workshop/$(JUPYTERHUB_USER)
    storage:
      extraVolumeMounts: []
dask-gateway:
  gateway:
    backend:
      scheduler:
        extraPodConfig:
          nodeSelector:
            2i2c/hub-name: workshop
      worker:
        extraPodConfig:
          nodeSelector:
            2i2c/hub-name: workshop
jupyterhub-home-nfs:
  eks:
    volumeId: vol-00223ae14cbcad300
  quotaEnforcer:
    config:
      QuotaManager:
        hard_quota: 10 # in GiB
