basehub:
  nfs:
    enabled: true
    volumeReporter:
      enabled: false
    pv:
      enabled: true
      # from https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html
      mountOptions:
        - rsize=1048576
        - wsize=1048576
        - timeo=600
        - soft # We pick soft over hard, so NFS lockups don't lead to hung processes
        - retrans=2
        - noresvport
      serverIP: fs-00c0183a99b47c9ed.efs.us-west-2.amazonaws.com
      baseShareName: /
  jupyterhub:
    custom:
      2i2c:
        add_staff_user_ids_to_admin_users: true
        add_staff_user_ids_of_type: "github"
      jupyterhubConfigurator:
        enabled: false
      homepage:
        gitRepoBranch: "victor"
        templateVars:
          org:
            name: VICTOR
            logo_url: https://i.imgur.com/D2vXQ5k.png
            url: https://victor.ldeo.columbia.edu
          designed_by:
            name: 2i2c
            url: https://2i2c.org
          operated_by:
            name: 2i2c
            url: https://2i2c.org
          funded_by:
            name: "National Science Foundation"
            url: https://people.climate.columbia.edu/projects/sponsor/National%20Science%20Foundation
    hub:
      config:
        JupyterHub:
          authenticator_class: cilogon
        CILogonOAuthenticator:
          allowed_idps:
            # Choice of idps was discussed in
            # https://2i2c.freshdesk.com/a/tickets/2080
            http://github.com/login/oauth/authorize:
              default: true
              username_derivation:
                username_claim: "preferred_username"
            http://google.com/accounts/o8/id:
              username_derivation:
                username_claim: "email"
                action: prefix
                prefix: g
            http://login.microsoftonline.com/common/oauth2/v2.0/authorize:
              username_derivation:
                username_claim: "email"
                action: prefix
                prefix: ms
        OAuthenticator:
          # WARNING: Don't use allow_existing_users with config to allow an
          #          externally managed group of users, such as
          #          GitHubOAuthenticator.allowed_organizations, as it breaks a
          #          common expectations for an admin user.
          #
          #          The broken expectation is that removing a user from the
          #          externally managed group implies that the user won't have
          #          access any more. In practice the user will still have
          #          access if it had logged in once before, as it then exists
          #          in JupyterHub's database of users.
          #
          allow_existing_users: True
        Authenticator:
          # WARNING: Removing a user from admin_users or allowed_users doesn't
          #          revoke admin status or access.
          #
          #          OAuthenticator.allow_existing_users allows any user in the
          #          JupyterHub database of users able to login. This includes
          #          any previously logged in user or user previously listed in
          #          allowed_users or admin_users, as such users are added to
          #          JupyterHub's database on startup.
          #
          #          To revoke admin status or access for a user when
          #          allow_existing_users is enabled, first remove the user from
          #          admin_users or allowed_users, then deploy the change, and
          #          finally revoke the admin status or delete the user via the
          #          /hub/admin panel.
          #
          admin_users:
            - einatlev-ldeo
            - SamKrasnoff
    singleuser:
      defaultUrl: /lab
    scheduling:
      userScheduler:
        enabled: true
