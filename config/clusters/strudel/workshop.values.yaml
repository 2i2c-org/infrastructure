jupyterhub:
  custom:
    2i2c:
      add_staff_user_ids_to_admin_users: true
      add_staff_user_ids_of_type: github
  ingress:
    hosts: [workshop.strudel.2i2c.cloud]
    tls:
    - hosts: [workshop.strudel.2i2c.cloud]
      secretName: https-auto-tls
  hub:
    config:
      JupyterHub:
        authenticator_class: github
      GitHubOAuthenticator:
        oauth_callback_url: https://workshop.strudel.2i2c.cloud/hub/oauth_callback
        allowed_organizations:
        - strudel-science/infrastructure
        - strudel-science/workshop
        scope:
        - read:org
    extraConfig:
      # Get GitHub identity from token
      extract_ident.py: |
        from urllib.parse import urlparse

        async def auth_state_hook(spawner, auth_state):
            if not auth_state:
                spawner.log.warning(f"Missing auth state for user {spawner.user.name}")
                return

            spawner.environment['GIT_CONFIG_COUNT'] = "2"
            spawner.environment['GIT_CONFIG_KEY_0'] = "user.name"
            spawner.environment['GIT_CONFIG_VALUE_0'] = auth_state['name']

            spawner.environment['GIT_CONFIG_KEY_1'] = "user.email"
            spawner.environment['GIT_CONFIG_VALUE_1'] = auth_state['email']
            
        c.Spawner.auth_state_hook = auth_state_hook
