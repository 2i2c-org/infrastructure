basehub:
  nfs:
    pv:
      # from https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html
      mountOptions:
        - rsize=1048576
        - wsize=1048576
        - timeo=600
        - soft # We pick soft over hard, so NFS lockups don't lead to hung processes
        - retrans=2
        - noresvport
      serverIP: fs-00c0183a99b47c9ed.efs.us-west-2.amazonaws.com
      baseShareName: /
  jupyterhub:
    custom:
      2i2c:
        add_staff_user_ids_to_admin_users: true
        add_staff_user_ids_of_type: "github"
      homepage:
        templateVars:
          org:
            name: Victor
            logo_url: https://lh3.googleusercontent.com/drive-viewer/AFDK6gOSmgurudnSJrUNMaIdOIEeu8aXUzWS9qZ0Oi3XO3_fFYdfjksmrPQrjv542v_81TCkVPlRT_Acf5BAojMEeYlEzF8nmw=w2880-h1368
            url: https://people.climate.columbia.edu/projects/view/2387
          designed_by:
            name: 2i2c
            url: https://2i2c.org
          operated_by:
            name: 2i2c
            url: https://2i2c.org
          funded_by:
            name: "National Science Foundation"
            url: https://people.climate.columbia.edu/projects/sponsor/National%20Science%20Foundation
    hub:
      config:
        Authenticator:
          # This hub uses GitHub Teams auth and so we don't set
          # allowed_users in order to not deny access to valid members of
          # the listed teams. These people should have admin access though.
          admin_users:
            - einatlev-ldeo
            - SamKrasnoff
        JupyterHub:
          authenticator_class: github
        GitHubOAuthenticator:
          allowed_organizations:
            - 2i2c-org:hub-access-for-2i2c-staff
            - VICTOR-Community:victoraccess
          scope:
            - read:org
    singleuser:
      profileList:
        # The mem-guarantees are here so k8s doesn't schedule other pods
        # on these nodes.
        - display_name: "Small: m5.large"
          description: "~2 CPU, ~8G RAM"
          default: true
          kubespawner_override:
            # Explicitly unset mem_limit, so it overrides the default memory limit we set in
            # basehub/values.yaml
            mem_limit: 8G
            mem_guarantee: 6.5G
            node_selector:
              node.kubernetes.io/instance-type: m5.large
        - display_name: "Medium: m5.xlarge"
          description: "~4 CPU, ~15G RAM"
          kubespawner_override:
            mem_limit: 15G
            mem_guarantee: 12G
            node_selector:
              node.kubernetes.io/instance-type: m5.xlarge
        - display_name: "Large: m5.2xlarge"
          description: "~8 CPU, ~30G RAM"
          kubespawner_override:
            mem_limit: 30G
            mem_guarantee: 25G
            node_selector:
              node.kubernetes.io/instance-type: m5.2xlarge
        - display_name: "Huge: m5.8xlarge"
          description: "~16 CPU, ~60G RAM"
          kubespawner_override:
            mem_limit: 60G
            mem_guarantee: 50G
            node_selector:
              node.kubernetes.io/instance-type: m5.8xlarge
      defaultUrl: /lab
      image:
        name: pangeo/pangeo-notebook
        tag: "2022.09.21"
    scheduling:
      userScheduler:
        enabled: true
