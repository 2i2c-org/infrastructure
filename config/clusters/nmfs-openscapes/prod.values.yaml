nfs:
  pv:
    serverIP: 10.100.21.149

userServiceAccount:
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::891612562472:role/nmfs-openscapes-prod

dask-gateway:
  gateway:
    backend:
      scheduler:
        extraPodConfig:
          nodeSelector:
            2i2c/hub-name: prod
      worker:
        extraPodConfig:
          nodeSelector:
            2i2c/hub-name: prod

jupyterhub:
  ingress:
    hosts: [nmfs-openscapes.2i2c.cloud]
    tls:
      - hosts: [nmfs-openscapes.2i2c.cloud]
        secretName: https-auto-tls
  singleuser:
    nodeSelector:
      2i2c/hub-name: prod
    extraEnv:
      SCRATCH_BUCKET: s3://nmfs-openscapes-scratch/$(JUPYTERHUB_USER)
      PERSISTENT_BUCKET: s3://nmfs-openscapes-persistent/$(JUPYTERHUB_USER)
  hub:
    config:
      GitHubOAuthenticator:
        oauth_callback_url: https://nmfs-openscapes.2i2c.cloud/hub/oauth_callback
    services:
      jupyterhub-groups-exporter: {}
    loadRoles:
      jupyterhub-groups-exporter:
        services:
          - jupyterhub-groups-exporter
        scopes:
          - users
          - groups
    extraConfig:
      custom-github-oauthenticator: |
        class CustomGitHubOAuthenticator(GitHubOAuthenticator):
          async def authenticate(self, *args, **kwargs):
              resp = await super().authenticate(*args, **kwargs)
              if resp["auth_state"]["teams"] is None:
                return resp
              groups = []
              for team in resp["auth_state"]["teams"]:
                if f'{team["organization"]["login"]}:{team["slug"]}' not in self.allowed_organizations:
                  continue
                else:
                  groups.append(f'{team["organization"]["login"]}:{team["slug"]}')
              resp["groups"] = groups
              return resp
        c.JupyterHub.authenticator_class = CustomGitHubOAuthenticator

jupyterhub-home-nfs:
  eks:
    volumeId: vol-004cc1b60a1dfb9e4
  quotaEnforcer:
    hardQuota: "64" # in GB
    path: "/export/prod"

jupyterhub-groups-exporter:
  enabled: true
  config:
    groupsExporter:
      update_exporter_interval: 3600

binderhub-service:
  config:
    BinderHub:
      image_prefix: quay.io/imagebuilding-non-gcp-hubs/nmfs-openscapes-prod-
