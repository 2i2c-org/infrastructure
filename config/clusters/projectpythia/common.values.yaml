nfs:
  enabled: true
  # volumeReporter will report 100% for all hubs as EFS is unbounded, we disable
  # it to save a limited amount of pods we can allocate per core node
  volumeReporter:
    enabled: false
  pv:
    enabled: true
    # from https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html
    mountOptions:
    - rsize=1048576
    - wsize=1048576
    - timeo=600
    - soft   # We pick soft over hard, so NFS lockups don't lead to hung processes
    - retrans=2
    - noresvport
    serverIP: fs-0c29370cc50856b5d.efs.us-west-2.amazonaws.com
    baseShareName: /

jupyterhub-home-nfs:
  enabled: true
  eks:
    enabled: true
  prometheusExporter:
    enabled: true

jupyterhub:
  custom:
    2i2c:
      add_staff_user_ids_to_admin_users: true
      add_staff_user_ids_of_type: github
    jupyterhubConfigurator:
      enabled: false
    homepage:
      templateVars:
        designed_by:
          name: 2i2c
          url: https://2i2c.org
        operated_by:
          name: 2i2c
          url: https://2i2c.org
        funded_by:
          name: NSF
          url: https://doi.org/10.5281/zenodo.8184298
        org:
          url: https://projectpythia.org/
          logo_url: https://raw.githubusercontent.com/ProjectPythia/projectpythia.github.io/refs/heads/main/portal/_static/images/logos/pythia_logo-blue-rtext.svg

  hub:
    allowNamedServers: true
    config:
      JupyterHub:
        authenticator_class: github
      GitHubOAuthenticator:
        allowed_organizations:
        - ProjectPythia:cookoff2025
      Authenticator:
        admin_users:
        - jmunroe
        - ktyle
        - erogluorhan
        - jukent

  scheduling:
    userScheduler:
      enabled: true

  singleuser:
    defaultUrl: /lab
    extraEnv:
      GH_SCOPED_CREDS_CLIENT_ID: Iv23liaEC5WLtjKehTtK
      GH_SCOPED_CREDS_APP_URL: https://github.com/apps/2i2c-project-pythia-push-access
    extraFiles:
      project_pythia_cookoff:
        mountPath: /mnt/project_pythia_cookoff/cookbook_prep
        mode: 0755
        stringData: |
          #!/usr/bin/env bash

          # This scripts performs additional configuration of the users JuptyerLab environment
          # so that certain packages and libraries will be available

          set -x

          # Add support for developing with git, GitHub, and jupytext
          #conda install --yes -c conda-forge jupyterlab-git gh-scoped-creds jupytext
          pip install jupyterlab-git gh-scoped-creds jupytext

          jupytext /mnt/project_pythia_cookoff/Cookoff_2025.md --output /home/jovyan/Cookoff_2025.ipynb
          chown jovyan:jovyan /home/jovyan/Cookoff_2025.ipynb

          jupyterhub-singleuser
      cookoff_2025:
        mountPath: /mnt/project_pythia_cookoff/Cookoff_2025.md
        mode: 0555
        stringData: |
          ---
          jupytext:
            text_representation:
              extension: .md
              format_name: myst
              format_version: 0.13
              jupytext_version: 1.17.2
          kernelspec:
            display_name: Python 3 (ipykernel)
            language: python
            name: python3
          ---

          # Project Pythia Cookoff 2025

          +++

          This file has been autogenerated to assist with using the Project Pythia JupyterHub for Cookbook developement.

          +++

          Execute the cell below (shift-enter), browse the URL shown, and paste the code that has already been copied to your clipboard.

          ```{code-cell} ipython3
          import gh_scoped_creds

          %ghscopedcreds
          ```

          The above step needs to be repeat once per JupyterLab session.

          +++

          ## Repository configuration URL:

          ### [https://github.com/apps/2i2c-project-pythia-push-access](https://github.com/apps/2i2c-project-pythia-push-access)
    cmd:
      - /mnt/project_pythia_cookoff/cookbook_prep
    profileList:
    - display_name: Choose your environment and resources
      slug: only-choice
      profile_options:
        image:
          display_name: Image
          # Enables dynamic image building for this profile
          dynamic_image_building:
            enabled: true
          unlisted_choice:
            enabled: true
            display_name: Custom image
            validation_regex: ^.+:.+$
            validation_message: Must be a publicly available docker image, of form <image-name>:<tag>
            display_name_in_choices: Specify an existing docker image
            description_in_choices: Use a pre-existing docker image from a public docker registry (dockerhub, quay, etc)
            kubespawner_override:
              image: '{value}'
          choices:
            pangeo:
              display_name: Pangeo Notebook Image
              slug: pangeo
              default: true
              description: Python image with scientific, dask and geospatial tools
              kubespawner_override:
                image: pangeo/pangeo-notebook:2025.07.09
            scipy:
              display_name: Jupyter SciPy Notebook
              slug: scipy
              kubespawner_override:
                image: quay.io/jupyter/scipy-notebook:2025-07-28
        resources:
          display_name: Resource Allocation
          choices:
            mem_15_2:
              display_name: 15.2 GB RAM, upto 15.6 CPUs
              kubespawner_override:
                mem_guarantee: 16273612210
                mem_limit: 16273612210
                cpu_guarantee: 1.961875
                cpu_limit: 15.695
                node_selector:
                  node.kubernetes.io/instance-type: r5.4xlarge
              default: true
            mem_30_3:
              display_name: 30.3 GB RAM, upto 15.6 CPUs
              kubespawner_override:
                mem_guarantee: 32547224420
                mem_limit: 32547224420
                cpu_guarantee: 3.92375
                cpu_limit: 15.695
                node_selector:
                  node.kubernetes.io/instance-type: r5.4xlarge
            mem_60_6:
              display_name: 60.6 GB RAM, upto 15.6 CPUs
              kubespawner_override:
                mem_guarantee: 65094448840
                mem_limit: 65094448840
                cpu_guarantee: 7.8475
                cpu_limit: 15.695
                node_selector:
                  node.kubernetes.io/instance-type: r5.4xlarge
            mem_121_2:
              display_name: 121.2 GB RAM, upto 15.6 CPUs
              kubespawner_override:
                mem_guarantee: 130188897681
                mem_limit: 130188897681
                cpu_guarantee: 15.695
                cpu_limit: 15.695
                node_selector:
                  node.kubernetes.io/instance-type: r5.4xlarge
    - display_name: NVIDIA Tesla T4, ~16 GB, ~4 CPUs
      description: Start a container on a dedicated node with a GPU
      slug: gpu
      profile_options:
        image:
          display_name: Image
          dynamic_image_building:
            enabled: true
          unlisted_choice:
            enabled: true
            display_name: Custom image
            validation_regex: ^.+:.+$
            validation_message: Must be a publicly available docker image of form <image-name>:<tag>
            kubespawner_override:
              image: '{value}'
          choices:
            tensorflow:
              display_name: Pangeo Tensorflow ML Notebook
              slug: tensorflow
              kubespawner_override:
                image: quay.io/pangeo/ml-notebook:2025.07.09
            pytorch:
              display_name: Pangeo PyTorch ML Notebook
              default: true
              slug: pytorch
              kubespawner_override:
                image: quay.io/pangeo/pytorch-notebook:2025.05.22
      kubespawner_override:
        environment:
          NVIDIA_DRIVER_CAPABILITIES: compute,utility
        mem_limit:
        mem_guarantee: 14G
        node_selector:
          node.kubernetes.io/instance-type: g4dn.xlarge
        extra_resource_limits:
          nvidia.com/gpu: '1'

binderhub-service:
  enabled: true
  networkPolicy:
    enabled: true
  config:
    BinderHub:
      image_prefix: quay.io/imagebuilding-non-gcp-hubs/projectpythia-
  # The password to the registry is stored encrypted in the hub's encrypted config file
  buildPodsRegistryCredentials:
    server: https://quay.io
    username: imagebuilding-non-gcp-hubs+image_builder
