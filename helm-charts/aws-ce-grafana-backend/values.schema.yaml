# This schema (a JSONSchema in YAML format) is used to generate
# values.schema.json to be packaged with the Helm chart.
#
# This schema is also planned to be used by our documentation system to build
# the configuration reference section based on the description fields. See
# docs/source/conf.py for that logic in the future!
#
# We look to document everything we have default values for in values.yaml, but
# we don't look to enforce the perfect validation logic within this file.
#
# ref: https://helm.sh/docs/topics/charts/#schema-files
# ref: https://json-schema.org/learn/getting-started-step-by-step.html
#
$schema: http://json-schema.org/draft-07/schema#
type: object
additionalProperties: false
required:
  # General configuration
  - global
  # Software configuration
  - envBasedConfig
  # Deployment resource
  - image
  # Other resources
  - serviceAccount
  - service
  - ingress
  - networkPolicy
properties:
  # Flag to conditionally install the chart
  # ---------------------------------------------------------------------------
  #
  enabled:
    type: boolean
    description: |
      Configuration flag for charts depending on aws-ce-grafana-backend to toggle installing it.

  # General configuration
  # ---------------------------------------------------------------------------
  #
  nameOverride:
    type: [string, "null"]
  fullnameOverride:
    type: [string, "null"]
  global:
    type: object
    additionalProperties: true

  # Software configuration
  # ---------------------------------------------------------------------------
  #
  envBasedConfig:
    type: object
    additionalProperties: false
    required: [clusterName]
    properties:
      clusterName:
        type: string

  # Deployment resource
  # ---------------------------------------------------------------------------
  #
  replicas:
    type: integer
  extraEnv:
    type: array
  image: &image
    type: object
    additionalProperties: false
    required: [repository, tag]
    properties:
      repository:
        type: string
      tag:
        type: string
      pullPolicy:
        enum: [null, "", IfNotPresent, Always, Never]
      pullSecrets:
        type: array
  resources: &resources
    type: object
    additionalProperties: true
  securityContext: &securityContext
    type: object
    additionalProperties: true
  podSecurityContext: &podSecurityContext
    type: object
    additionalProperties: true
  podAnnotations: &labels-and-annotations
    type: object
    additionalProperties: false
    patternProperties:
      ".*":
        type: string
  nodeSelector: &nodeSelector
    type: object
    additionalProperties: true
  affinity: &affinity
    type: object
    additionalProperties: true
  tolerations: &tolerations
    type: array

  # ServiceAccount resource
  # ---------------------------------------------------------------------------
  #
  serviceAccount:
    type: object
    additionalProperties: false
    required: [create, name]
    properties:
      create:
        type: boolean
      name:
        type: string
      annotations: *labels-and-annotations

  # Service resource
  # ---------------------------------------------------------------------------
  #
  service:
    type: object
    additionalProperties: false
    required: [type, port]
    properties:
      type:
        type: string
      port:
        type: integer
      nodePort:
        type: integer
      annotations: *labels-and-annotations

  # Ingress resource
  # ---------------------------------------------------------------------------
  #
  ingress:
    type: object
    additionalProperties: false
    required: [enabled]
    properties:
      enabled:
        type: boolean
      annotations: *labels-and-annotations
      ingressClassName:
        type: [string, "null"]
      hosts:
        type: array
      pathSuffix:
        type: [string, "null"]
      pathType:
        enum: [Prefix, Exact, ImplementationSpecific]
      tls:
        type: array

  # NetworkPolicy resource
  # ---------------------------------------------------------------------------
  #
  networkPolicy:
    type: object
    additionalProperties: false
    properties:
      enabled:
        type: boolean
      ingress:
        type: array
      ingressAllowRules:
        type: object
        additionalProperties: false
        required:
          - localGrafanaInstances
        properties:
          localGrafanaInstances:
            type: boolean
