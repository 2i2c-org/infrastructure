{{- if .Values.jupyterhub.custom.cloudResources.scratchBucket.enabled -}}
{{- if eq .Values.jupyterhub.custom.cloudResources.provider "gcp" -}}
apiVersion: storage.cnrm.cloud.google.com/v1beta1
kind: StorageBucket
metadata:
  annotations:
    cnrm.cloud.google.com/project-id : {{ .Values.jupyterhub.custom.cloudResources.gcp.projectId | quote }}
    cnrm.cloud.google.com/force-destroy: "false"
  name: {{ include "cloudResources.scratchBucket.name" . }}
spec:
  bucketPolicyOnly: true
  lifecycleRule:
    - action:
        type: Delete
      condition:
        age: 7
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: scratch-bucket-binding
  annotations:
    cnrm.cloud.google.com/project-id : {{ .Values.jupyterhub.custom.cloudResources.gcp.projectId | quote }}
spec:
  member: serviceAccount:{{ include "cloudResources.gcp.serviceAccountName" . }}@{{ .Values.jupyterhub.custom.cloudResources.gcp.projectId}}.iam.gserviceaccount.com
  # This gives users the ability to delete the bucket too :(
  # But without this, I think you can't list objects in the bucket
  role: roles/storage.admin
  resourceRef:
    apiVersion: storage.cnrm.cloud.google.com/v1beta1
    kind: StorageBucket
    name: {{ include "cloudResources.scratchBucket.name" . }}
{{- end }}
{{- end }}
