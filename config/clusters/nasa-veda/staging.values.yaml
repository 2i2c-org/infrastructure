basehub:
  nfs:
    pv:
      serverIP: 10.100.88.130
  userServiceAccount:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::444055461661:role/nasa-veda-staging
  jupyterhub:
    singleuser:
      nodeSelector:
        2i2c/hub-name: staging
      initContainers:
        - &volume_ownership_fix_initcontainer
          name: volume-mount-ownership-fix
          image: busybox:1.36.1
          command:
            - sh
            - -c
            - id && chown 1000:1000 /home/jovyan /home/jovyan/shared /home/jovyan/shared-public && ls -lhd /home/jovyan
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: home
              mountPath: /home/jovyan
              subPath: "{username}"
            # Mounted without readonly attribute here,
            # so we can chown it appropriately
            - name: home
              mountPath: /home/jovyan/shared
              subPath: _shared
            - name: home
              mountPath: /home/jovyan/shared-public
              subPath: _shared-public
      profileList:
        - display_name: Choose your environment and resources
          default: true
          profile_options:
            image:
              display_name: Environment
              dynamic_image_building:
                enabled: True
              unlisted_choice:
                enabled: True
                display_name: "Custom image"
                validation_regex: "^.+:.+$"
                validation_message: "Must be a publicly available docker image, of form <image-name>:<tag>"
                kubespawner_override:
                  image: "{value}"
              choices:
                01-modify-pangeo:
                  display_name: Modified Pangeo Notebook
                  description: Pangeo based notebook with a Python environment
                  kubespawner_override:
                    image: public.ecr.aws/nasa-veda/pangeo-notebook-veda-image:6fcf6cfa3192
                    init_containers:
                      # Need to explicitly fix ownership here, as otherwise these directories will be owned
                      # by root on most NFS filesystems - neither EFS nor Google Filestore support anonuid
                      - *volume_ownership_fix_initcontainer
                      # this container uses nbgitpuller to mount https://github.com/NASA-IMPACT/veda-docs/ for user pods
                      # image source: https://github.com/NASA-IMPACT/jupyterhub-gitpuller-init
                      - name: jupyterhub-gitpuller-init
                        image: public.ecr.aws/nasa-veda/jupyterhub-gitpuller-init:97eb45f9d23b128aff810e45911857d5cffd05c2
                        env:
                          - name: TARGET_PATH
                            value: veda-docs
                          - name: SOURCE_REPO
                            value: "https://github.com/NASA-IMPACT/veda-docs"
                        volumeMounts:
                          - name: home
                            mountPath: /home/jovyan
                            subPath: "{username}"
                        securityContext:
                          runAsUser: 1000
                          runAsGroup: 1000
                02-rocker:
                  display_name: Rocker Geospatial with RStudio
                  description: R environment with many geospatial libraries pre-installed
                  kubespawner_override:
                    image: rocker/binder:4.3
                    image_pull_policy: Always
                    # Launch RStudio after the user logs in
                    default_url: /rstudio
                    # Ensures container working dir is homedir
                    # https://github.com/2i2c-org/infrastructure/issues/2559
                    working_dir: /home/rstudio
                03-qgis:
                  display_name: QGIS on Linux Desktop
                  description: Linux desktop in the browser, with qgis installed
                  kubespawner_override:
                    # Launch people directly into the Linux desktop when they start
                    default_url: /desktop
                    # Built from https://github.com/2i2c-org/nasa-qgis-image
                    image: quay.io/2i2c/nasa-qgis-image:d76118ea0c15
            resource_allocation:
              display_name: Resource Allocation
              choices:
                mem_1_9:
                  display_name: 1.9 GB RAM, upto 3.7 CPUs
                  kubespawner_override:
                    mem_guarantee: 1991244775
                    mem_limit: 1991244775
                    cpu_guarantee: 0.2328125
                    cpu_limit: 3.725
                    node_selector:
                      node.kubernetes.io/instance-type: r5.xlarge
                  default: true
                mem_3_7:
                  display_name: 3.7 GB RAM, upto 3.7 CPUs
                  kubespawner_override:
                    mem_guarantee: 3982489550
                    mem_limit: 3982489550
                    cpu_guarantee: 0.465625
                    cpu_limit: 3.725
                    node_selector:
                      node.kubernetes.io/instance-type: r5.xlarge
                mem_7_4:
                  display_name: 7.4 GB RAM, upto 3.7 CPUs
                  kubespawner_override:
                    mem_guarantee: 7964979101
                    mem_limit: 7964979101
                    cpu_guarantee: 0.93125
                    cpu_limit: 3.725
                    node_selector:
                      node.kubernetes.io/instance-type: r5.xlarge
                mem_14_8:
                  display_name: 14.8 GB RAM, upto 3.7 CPUs
                  kubespawner_override:
                    mem_guarantee: 15929958203
                    mem_limit: 15929958203
                    cpu_guarantee: 1.8625
                    cpu_limit: 3.725
                    node_selector:
                      node.kubernetes.io/instance-type: r5.xlarge
                mem_29_7:
                  display_name: 29.7 GB RAM, upto 3.7 CPUs
                  kubespawner_override:
                    mem_guarantee: 31859916406
                    mem_limit: 31859916406
                    cpu_guarantee: 3.725
                    cpu_limit: 3.725
                    node_selector:
                      node.kubernetes.io/instance-type: r5.xlarge
                mem_60_6:
                  display_name: 60.6 GB RAM, upto 15.6 CPUs
                  kubespawner_override:
                    mem_guarantee: 65094448840
                    mem_limit: 65094448840
                    cpu_guarantee: 7.8475
                    cpu_limit: 15.695
                    node_selector:
                      node.kubernetes.io/instance-type: r5.4xlarge
                mem_121_2:
                  display_name: 121.2 GB RAM, upto 15.6 CPUs
                  kubespawner_override:
                    mem_guarantee: 130188897681
                    mem_limit: 130188897681
                    cpu_guarantee: 15.695
                    cpu_limit: 15.695
                    node_selector:
                      node.kubernetes.io/instance-type: r5.4xlarge

    hub:
      config:
        GitHubOAuthenticator:
          oauth_callback_url: https://staging.hub.openveda.cloud/hub/oauth_callback
      image:
        name: quay.io/2i2c/dynamic-image-building-experiment
        tag: 0.0.1-0.dev.git.10263.hc87b65cf
    ingress:
      hosts: [staging.hub.openveda.cloud]
      tls:
        - hosts: [staging.hub.openveda.cloud]
          secretName: https-auto-tls
    custom:
      homepage:
        gitRepoBranch: "staging"
        gitRepoUrl: "https://github.com/NASA-IMPACT/veda-hub-homepage"

  dask-gateway:
    gateway:
      backend:
        scheduler:
          extraPodConfig:
            nodeSelector:
              2i2c/hub-name: staging
        worker:
          extraPodConfig:
            node_selector:
              2i2c/hub-name: staging
        imagePullSecrets: [{ name: image-pull-secret }]

  binderhub-service:
    enabled: true
    dockerApi:
      nodeSelector:
        2i2c/hub-name: staging
    config:
      KubernetesBuildExecutor:
        node_selector:
          node.kubernetes.io/instance-type: r5.xlarge
          2i2c/hub-name: staging
      BinderHub:
        # something like <region>-docker.pkg.dev/<project-name>/<repository-name> for grc.io
        # or quay.io/org/repo/cluster-hub/ for quay.io
        image_prefix: quay.io/veda-binder/staging-
      DockerRegistry:
        url: &url https://quay.io
        username: &username veda-binder+image_builder
    buildPodsRegistryCredentials:
      server: *url
      username: *username

  jupyter-home-nfs:
    enabled: true
    eks:
      enabled: true
      volumeId: vol-0a1246ee2e07372d0
    quotaEnforcer:
      hardQuota: "10" # in GB
      path: "/export/staging"
