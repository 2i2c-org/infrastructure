basehub:
  nfs:
    enabled: true
    pv:
      enabled: true
      mountOptions:
        - soft
        - noatime
      baseShareName: /
  jupyterhub-home-nfs:
    enabled: true
    prometheusExporter:
      enabled: true
    gke:
      enabled: true
  jupyterhub-groups-exporter:
    enabled: true
    config:
      groupsExporter:
        update_exporter_interval: 3600
  dask-gateway:
    enabled: true
    gateway:
      backend:
        scheduler:
          cores:
            request: 0.8
            limit: 1
          memory:
            request: 1G
            limit: 2G
  jupyterhub:
    custom:
      2i2c:
        add_staff_user_ids_to_admin_users: true
        add_staff_user_ids_of_type: "github"
      jupyterhubConfigurator:
        enabled: false
      daskhubSetup:
        enabled: true
      homepage:
        templateVars:
          org:
            name: Cooperative Institute for Research to Operations in Hydrology
            url: http://ovpred.ua.edu/alabama-water-institute/
            logo_url: https://user-images.githubusercontent.com/1879041/174884338-ec97bec1-1cc9-4ad8-8f63-06de666b5012.png
          designed_by:
            name: 2i2c
            url: https://2i2c.org
          operated_by:
            name: 2i2c
            url: https://2i2c.org
          funded_by:
            name: National Oceanic and Atmospheric Administration
            url: https://www.noaa.gov/
    singleuser:
      defaultUrl: /lab
      cloudMetadata:
        blockWithIptables: false
    hub:
      config:
        JupyterHub:
          authenticator_class: github
        GitHubOAuthenticator:
          populate_teams_in_auth_state: true
          allowed_organizations:
            - 2i2c-org:hub-access-for-2i2c-staff
            - alabamawaterinstitute
            - NOAA-OWP
          scope:
            - read:org
        Authenticator:
          enable_auth_state: true
          manage_groups: true
          admin_users:
            - jameshalgren
            - arpita0911patel
            - dan1831
            - benlee0423
      services:
        jupyterhub-groups-exporter: {}
      loadRoles:
        jupyterhub-groups-exporter:
          services:
            - jupyterhub-groups-exporter
          scopes:
            - users
            - groups
      extraConfig:
        custom-github-oauthenticator: |
          class CustomGitHubOAuthenticator(GitHubOAuthenticator):
            async def authenticate(self, *args, **kwargs):
                resp = await super().authenticate(*args, **kwargs)
                if resp["auth_state"]["teams"] is None:
                  return resp
                groups = []
                for team in resp["auth_state"]["teams"]:
                  if f'{team["organization"]["login"]}:{team["slug"]}' not in self.allowed_organizations:
                    continue
                  else:
                    groups.append(f'{team["organization"]["login"]}:{team["slug"]}')
                resp["groups"] = groups
                return resp
          c.JupyterHub.authenticator_class = CustomGitHubOAuthenticator
