nfs:
  enabled: true
  # volumeReporter will report 100% for all hubs as EFS is unbounded, we disable
  # it to save a limited amount of pods we can allocate per core node
  volumeReporter:
    enabled: false
  pv:
    enabled: true
    # from https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html
    mountOptions:
      - rsize=1048576
      - wsize=1048576
      - timeo=600
      - soft # We pick soft over hard, so NFS lockups don't lead to hung processes
      - retrans=2
      - noresvport
    serverIP: fs-0c29370cc50856b5d.efs.us-west-2.amazonaws.com
    baseShareName: /

jupyterhub:
  custom:
    2i2c:
      add_staff_user_ids_to_admin_users: true
      add_staff_user_ids_of_type: "github"
    jupyterhubConfigurator:
      enabled: false
    homepage:
      templateVars:
        designed_by:
          name: "2i2c"
          url: https://2i2c.org
        operated_by:
          name: "2i2c"
          url: https://2i2c.org
        funded_by:
          name: "NSF"
          url: https://doi.org/10.5281/zenodo.8184298
        org:
          url: https://projectpythia.org/
          logo_url: https://projectpythia.org/_static/images/logos/pythia_logo-blue-rtext.svg

  hub:
    allowNamedServers: true
    image:
      name: quay.io/2i2c/dynamic-image-building-experiment
      tag: "0.0.1-0.dev.git.8663.h049aa2c2"
    config:
      JupyterHub:
        authenticator_class: github
      Authenticator:
        admin_users:
          - jmunroe
          - ktyle
    extraConfig:
      enable-fancy-profiles: |
        from jupyterhub_fancy_profiles import setup_ui
        setup_ui(c)

  scheduling:
    userScheduler:
      enabled: true

  singleuser:
    defaultUrl: /lab
    profileList:
      - display_name: "Only Profile Available, this info is not shown in the UI"
        slug: only-choice
        profile_options:
          image:
            display_name: Image
            unlisted_choice: &profile_list_unlisted_choice
              enabled: True
              display_name: "Custom image"
              validation_regex: "^.+:.+$"
              validation_message: "Must be a publicly available docker image, of form <image-name>:<tag>"
              display_name_in_choices: "Specify an existing docker image"
              description_in_choices: "Use a pre-existing docker image from a public docker registry (dockerhub, quay, etc)"
              kubespawner_override:
                image: "{value}"
            choices:
              pangeo:
                display_name: Pangeo Notebook Image
                slug: pangeo
                default: true
                description: "Python image with scientific, dask and geospatial tools"
                kubespawner_override:
                  image: pangeo/pangeo-notebook:2024.05.21
              scipy:
                display_name: Jupyter SciPy Notebook
                slug: scipy
                kubespawner_override:
                  image: quay.io/jupyter/scipy-notebook:2024-04-15
              tensorflow:
                display_name: Pangeo Tensorflow ML Notebook
                slug: tensorflow
                kubespawner_override:
                  image: pangeo/ml-notebook:2024.05.21
              pytorch:
                display_name: Pangeo PyTorch ML Notebook
                slug: pytorch
                kubespawner_override:
                  image: pangeo/pytorch-notebook:2024.05.21
          resources:
            display_name: Resource Allocation
            choices:
              mem_1_9:
                display_name: 1.9 GB RAM, up to 3.7 CPUs
                kubespawner_override:
                  mem_guarantee: 1991244775
                  mem_limit: 1991244775
                  cpu_guarantee: 0.2328125
                  cpu_limit: 3.725
                  node_selector:
                    node.kubernetes.io/instance-type: r5.xlarge
                default: true
              mem_3_7:
                display_name: 3.7 GB RAM, up to 3.7 CPUs
                kubespawner_override:
                  mem_guarantee: 3982489550
                  mem_limit: 3982489550
                  cpu_guarantee: 0.465625
                  cpu_limit: 3.725
                  node_selector:
                    node.kubernetes.io/instance-type: r5.xlarge
              mem_7_4:
                display_name: 7.4 GB RAM, up to 3.7 CPUs
                kubespawner_override:
                  mem_guarantee: 7964979101
                  mem_limit: 7964979101
                  cpu_guarantee: 0.93125
                  cpu_limit: 3.725
                  node_selector:
                    node.kubernetes.io/instance-type: r5.xlarge
              mem_14_8:
                display_name: 14.8 GB RAM, up to 3.7 CPUs
                kubespawner_override:
                  mem_guarantee: 15929958203
                  mem_limit: 15929958203
                  cpu_guarantee: 1.8625
                  cpu_limit: 3.725
                  node_selector:
                    node.kubernetes.io/instance-type: r5.xlarge
              mem_29_7:
                display_name: 29.7 GB RAM, up to 3.7 CPUs
                kubespawner_override:
                  mem_guarantee: 31859916406
                  mem_limit: 31859916406
                  cpu_guarantee: 3.725
                  cpu_limit: 3.725
                  node_selector:
                    node.kubernetes.io/instance-type: r5.xlarge
              gpu:
                display_name: NVIDIA Tesla T4, ~16 GB, ~4 CPUs
                kubespawner_override:
                  environment:
                    NVIDIA_DRIVER_CAPABILITIES: compute,utility
                  mem_limit: null
                  mem_guarantee: 14G
                  node_selector:
                    node.kubernetes.io/instance-type: g4dn.xlarge
                extra_resource_limits:
                  nvidia.com/gpu: "1"

binderhub-service:
  enabled: true
  config:
    BinderHub:
      image_prefix: quay.io/2i2c-projectpythia/binderhub-service-
  # The password to the registry is stored encrypted in the hub's encrypted config file
  buildPodsRegistryCredentials:
    server: "https://quay.io"
    username: "2i2c-projectpythia+image_builder"
