name: 2i2c
image_repo: "quay.io/2i2c/2i2c-hubs-image"
provider: gcp
gcp:
  key: secrets/2i2c.json
  project: two-eye-two-see
  cluster: pilot-hubs-cluster
  zone: us-central1-b
support:
  config:
    grafana:
      ingress:
        hosts:
          - grafana.pilot.2i2c.cloud
        tls:
          - secretName: grafana-tls
            hosts:
              - grafana.pilot.2i2c.cloud
hubs:
  - name: staging
    domain: staging.pilot.2i2c.cloud
    helm_chart: basehub
    auth0:
      # connection update? Also ensure the basehub Helm chart is provided a
      # matching value for jupyterhub.custom.2i2c.add_staff_user_ids_of_type!
      connection: google-oauth2
    config:
      docs_service:
        enabled: true
        repo: https://github.com/jupyterhub/nbgitpuller
        branch: gh-pages
      jupyterhub:
        custom:
          2i2c:
            add_staff_user_ids_to_admin_users: true
            add_staff_user_ids_of_type: "google"
          homepage:
            templateVars:
              org:
                name: 2i2c Staging
                url: https://2i2c.org
                logo_url: https://2i2c.org/media/logo.png
              designed_by:
                name: 2i2c
                url: https://2i2c.org
              operated_by:
                name: 2i2c
                url: https://2i2c.org
              funded_by:
                name: 2i2c
                url: https://2i2c.org
        hub:
          config:
            Authenticator:
              allowed_users: &staging_users
                - colliand@gmail.com
              admin_users: *staging_users
  - name: dask-staging
    domain: dask-staging.pilot.2i2c.cloud
    helm_chart: daskhub
    auth0:
      # connection update? Also ensure the basehub Helm chart is provided a
      # matching value for jupyterhub.custom.2i2c.add_staff_user_ids_of_type!
      connection: google-oauth2
    config:
      basehub:
        jupyterhub:
          custom:
            cloudResources:
              provider: gcp
              gcp:
                projectId: two-eye-two-see
              scratchBucket:
                enabled: true
            2i2c:
              add_staff_user_ids_to_admin_users: true
              add_staff_user_ids_of_type: "google"
            homepage:
              templateVars:
                org:
                  name: 2i2c Dask Staging
                  url: https://2i2c.org
                  logo_url: https://2i2c.org/media/logo.png
                designed_by:
                  name: 2i2c
                  url: https://2i2c.org
                operated_by:
                  name: 2i2c
                  url: https://2i2c.org
                funded_by:
                  name: 2i2c
                  url: https://2i2c.org
          singleuser:
            image:
              name: pangeo/pangeo-notebook
              tag: 2021.02.19
          hub:
            config:
              Authenticator:
                allowed_users: &dask_staging_users
                  - colliand@gmail.com
                admin_users: *dask_staging_users
  - name: demo
    domain: demo.pilot.2i2c.cloud
    helm_chart: basehub
    auth0:
      # connection update? Also ensure the basehub Helm chart is provided a
      # matching value for jupyterhub.custom.2i2c.add_staff_user_ids_of_type!
      connection: CILogon
    config:
      jupyterhub:
        custom:
          2i2c:
            add_staff_user_ids_to_admin_users: true
            add_staff_user_ids_of_type: "google"
          homepage:
            templateVars:
              org:
                name: 2i2c Demo Hub
                url: https://2i2c.org
                logo_url: https://2i2c.org/media/logo.png
              designed_by:
                name: 2i2c
                url: https://2i2c.org
              operated_by:
                name: 2i2c
                url: https://2i2c.org
              funded_by:
                name: 2i2c
                url: https://2i2c.org
        hub:
          config:
            Authenticator:
              username_pattern: '^(.+@2i2c\.org|deployment-service-check)$'
  - name: ohw
    domain: ohw.pilot.2i2c.cloud
    helm_chart: daskhub
    auth0:
      # connection update? Also ensure the basehub Helm chart is provided a
      # matching value for jupyterhub.custom.2i2c.add_staff_user_ids_of_type!
      connection: github
    config:
      basehub:
        jupyterhub:
          prePuller:
            continuous:
              enabled: true
          singleuser:
            networkPolicy:
              # In clusters with NetworkPolicy enabled, do not
              # allow outbound internet access that's not DNS, HTTP or HTTPS
              # For OHW, we allow 8080 (for DAP) and 22 (for ssh)
              # https://github.com/2i2c-org/pilot-hubs/issues/549#issuecomment-892276020
              enabled: true
              egress:
                - ports:
                    - port: 53
                      protocol: UDP
                - ports:
                    - port: 80
                      protocol: TCP
                - ports:
                    - port: 443
                      protocol: TCP
                - ports:
                    - port: 8080
                      protocol: TCP
                - ports:
                    - port: 22
                      protocol: TCP
            image:
              name: ghcr.io/oceanhackweek/jupyer-image
              tag: 9efd4fb
            memory:
              # Increase memory alloted during the workshop
              #  https://github.com/2i2c-org/pilot-hubs/issues/549#issuecomment-891264570
              guarantee: 7G
              limit: 8G
          custom:
            cloudResources:
              provider: gcp
              gcp:
                projectId: two-eye-two-see
              scratchBucket:
                enabled: true
            2i2c:
              add_staff_user_ids_to_admin_users: true
              add_staff_user_ids_of_type: "github"
            homepage:
              templateVars:
                org:
                  name: Ocean Hack Week
                  logo_url: https://avatars.githubusercontent.com/u/33128979
                  url: https://oceanhackweek.github.io/
                designed_by:
                  name: 2i2c
                  url: https://2i2c.org
                operated_by:
                  name: 2i2c
                  url: https://2i2c.org
                funded_by:
                  name: 2i2c
                  url: https://2i2c.org
          hub:
            config:
              Authenticator:
                allowed_users: &ohw_users
                  - ocefpaf
                admin_users: *ohw_users
  - name: justiceinnovationlab
    domain: justiceinnovationlab.pilot.2i2c.cloud
    helm_chart: basehub
    auth0:
      # connection update? Also ensure the basehub Helm chart is provided a
      # matching value for jupyterhub.custom.2i2c.add_staff_user_ids_of_type!
      connection: github
    config:
      jupyterhub:
        custom:
          2i2c:
            add_staff_user_ids_to_admin_users: true
            add_staff_user_ids_of_type: "github"
          homepage:
            templateVars:
              org:
                name: Justice Innovation Lab
                logo_url: "https://images.squarespace-cdn.com/content/5ee35ddb35affc21b29c0fd6/1596634079158-KLDENW5BSW2HQW4ZO0EH/JIL-Logo-Digital.png?format=1500w&content-type=image%2Fpng"
                url: https://www.justiceinnovationlab.org/
              designed_by:
                name: 2i2c
                url: https://2i2c.org
              operated_by:
                name: 2i2c
                url: https://2i2c.org
              funded_by:
                name: 2i2c
                url: https://2i2c.org
        hub:
          config:
            Authenticator:
              admin_users: &jil_admin_users
                - donaldbraman
                - JILPulvino
              # 2022-02-10 Sarah Gibson: I added in allowed_users here even though
              # I know we will be decomissioning this hub soon, just so that it's
              # no longer open to everyone with a GitHub account. Please revert
              # if this was not the correct thing to do.
              allowed_users: *jil_admin_users
  - name: pfw
    domain: pfw.pilot.2i2c.cloud
    helm_chart: basehub
    auth0:
      # connection update? Also ensure the basehub Helm chart is provided a
      # matching value for jupyterhub.custom.2i2c.add_staff_user_ids_of_type!
      connection: github
    config:
      jupyterhub:
        custom:
          2i2c:
            add_staff_user_ids_to_admin_users: true
            add_staff_user_ids_of_type: "github"
          homepage:
            templateVars:
              org:
                name: Purdue Fort Wayne
                logo_url: https://upload.wikimedia.org/wikipedia/en/thumb/1/14/Purdue_Fort_Wayne_Mastodons_logo.svg/400px-Purdue_Fort_Wayne_Mastodons_logo.svg.png
                url: https://www.pfw.edu/
              designed_by:
                name: 2i2c
                url: https://2i2c.org
              operated_by:
                name: 2i2c
                url: https://2i2c.org
              funded_by:
                name: JROST & IOI
                url: https://investinopen.org/blog/jrost-rapid-response-fund-awardees
        hub:
          config:
            Authenticator:
              allowed_users: &pfw_users
                - colliand
                - alessandromariaselvitella
                - fosterk86
              admin_users: *pfw_users
  - name: peddie
    domain: peddie.pilot.2i2c.cloud
    helm_chart: basehub
    auth0:
      # connection update? Also ensure the basehub Helm chart is provided a
      # matching value for jupyterhub.custom.2i2c.add_staff_user_ids_of_type!
      connection: google-oauth2
    config:
      jupyterhub:
        custom:
          2i2c:
            add_staff_user_ids_to_admin_users: true
            add_staff_user_ids_of_type: "google"
          homepage:
            templateVars:
              org:
                name: Peddie Academy
                logo_url: https://resources.finalsite.net/images/f_auto,q_auto,t_image_size_1/v1564687841/peddie/l4yufwwdksquxu2yetv6/PeddieSealPMS289.png
                url: http://peddie.org/
              designed_by:
                name: 2i2c
                url: https://2i2c.org
              operated_by:
                name: 2i2c
                url: https://2i2c.org
              funded_by:
                name: JROST & IOI
                url: https://investinopen.org/blog/jrost-rapid-response-fund-awardees
        hub:
          config:
            Authenticator:
              allowed_users: &peddie_users
                - rbennett@peddie.org
                - msawula@peddie.org
                - ericvd@berkeley.edu
              admin_users: *peddie_users
  - name: catalyst-cooperative
    domain: catalyst-cooperative.pilot.2i2c.cloud
    helm_chart: daskhub
    auth0:
      # connection update? Also ensure the basehub Helm chart is provided a
      # matching value for jupyterhub.custom.2i2c.add_staff_user_ids_of_type!
      connection: google-oauth2
    config:
      basehub:
        jupyterhub:
          singleuser:
            image:
              name: catalystcoop/pudl-jupyter
              tag: 2021.11.11
            memory:
              limit: 6G
              guarantee: 4G
          custom:
            2i2c:
              add_staff_user_ids_to_admin_users: true
              add_staff_user_ids_of_type: "google"
            cloudResources:
              provider: gcp
              gcp:
                projectId: two-eye-two-see
              scratchBucket:
                enabled: true
            homepage:
              templateVars:
                org:
                  name: Catalyst Cooperative
                  logo_url: https://catalyst.coop/files/2018/06/SimpleSquareWalking.png
                  url: https://catalyst.coop/
                designed_by:
                  name: 2i2c
                  url: https://2i2c.org
                operated_by:
                  name: 2i2c
                  url: https://2i2c.org
                funded_by:
                  name: 2i2c
                  url: https://2i2c.org
          hub:
            config:
              Authenticator:
                allowed_users: &catalyst_users
                  - zane.selvans@catalyst.coop
                  - cgosnell@catalyst.coop
                  - colliand@gmail.com
                admin_users: *catalyst_users
  - name: earthlab
    domain: earthlab.pilot.2i2c.cloud
    helm_chart: basehub
    auth0:
      # connection update? Also ensure the basehub Helm chart is provided a
      # matching value for jupyterhub.custom.2i2c.add_staff_user_ids_of_type!
      connection: github
    config:
      jupyterhub:
        custom:
          2i2c:
            add_staff_user_ids_to_admin_users: true
            add_staff_user_ids_of_type: "github"
          homepage:
            templateVars:
              org:
                name: EarthLab
                logo_url: https://pbs.twimg.com/profile_images/1102342372438925312/64xKJFPk.png
                url: https://www.colorado.edu/earthlab/
              designed_by:
                name: 2i2c
                url: https://2i2c.org
              operated_by:
                name: 2i2c
                url: https://2i2c.org
              funded_by:
                name: JROST & IOI
                url: https://investinopen.org/blog/jrost-rapid-response-fund-awardees
        hub:
          config:
            Authenticator:
              allowed_users: &earthlab_users
                - lwasser
              admin_users: *earthlab_users
  - name: paleohack2021
    domain: paleohack2021.hackathon.2i2c.cloud
    helm_chart: basehub
    auth0:
      # connection update? Also ensure the basehub Helm chart is provided a
      # matching value for jupyterhub.custom.2i2c.add_staff_user_ids_of_type!
      connection: github
    config:
      jupyterhub:
        scheduling:
          userPlaceholder:
            # Not needed anymore, hackathon is over
            replicas: 0
          userScheduler:
            # Each user gets almost 1 anyway
            enabled: true
        custom:
          2i2c:
            add_staff_user_ids_to_admin_users: true
            add_staff_user_ids_of_type: "github"
          homepage:
            templateVars:
              org:
                name: "PaleoHack 2021"
                logo_url: "https://raw.githubusercontent.com/LinkedEarth/Logos/master/pyleoclim_logo_full_white.png"
                url: "https://linkedearth.github.io/paleoHackathon/"
              designed_by:
                name: 2i2c
                url: https://2i2c.org
              operated_by:
                name: 2i2c
                url: https://2i2c.org
              funded_by:
                name: "NSF Paleo Perspectives on Climate Change program"
                url: "https://www.nsf.gov/funding/pgm_summ.jsp?pims_id=5750"
        singleuser:
          memory:
            guarantee: 256M
            limit: 4G
          cpu:
            guarantee: 0.1
            limit: 2
          image:
            name: quay.io/2i2c/paleohack-2021
            tag: 7534858b1098
        hub:
          config:
            Authenticator:
              allowed_users: &paleohack_users
                - CommonClimate
                - khider
                - fzhu2e
                - alexkjames
              admin_users: *paleohack_users
  - name: aup
    domain: aup.pilot.2i2c.cloud
    helm_chart: basehub
    auth0:
      # connection update? Also ensure the basehub Helm chart is provided a
      # matching value for jupyterhub.custom.2i2c.add_staff_user_ids_of_type!
      connection: github
    config:
      jupyterhub:
        custom:
          2i2c:
            add_staff_user_ids_to_admin_users: true
            add_staff_user_ids_of_type: "github"
          homepage:
            templateVars:
              org:
                name: The American University of Paris
                logo_url: https://www.aup.edu/sites/default/files/images/widget-assets/image/auplogo.jpeg
                url: https://www.aup.edu/
              designed_by:
                name: 2i2c
                url: https://2i2c.org
              operated_by:
                name: 2i2c
                url: https://2i2c.org
              funded_by:
                name: AUP
                url: https://www.aup.edu/
        singleuser:
          memory:
            limit: 2G
            guarantee: 2G
        hub:
          config:
            Authenticator:
              allowed_users: &aup_users
                - swalker
                - shaolintl
              admin_users: *aup_users
  - name: anu
    domain: anu.pilot.2i2c.cloud
    helm_chart: basehub
    auth0:
      connection: CILogon
    config:
      jupyterhub:
        custom:
          2i2c:
            add_staff_user_ids_to_admin_users: true
            add_staff_user_ids_of_type: "google"
          homepage:
            templateVars:
              org:
                name: The Australian National University
                logo_url: https://upload.wikimedia.org/wikipedia/en/thumb/4/4c/Australian_National_University_%28emblem%29.svg/320px-Australian_National_University_%28emblem%29.svg.png
                url: https://www.anu.edu.au/
              designed_by:
                name: 2i2c
                url: https://2i2c.org
              operated_by:
                name: 2i2c
                url: https://2i2c.org
              funded_by:
                name: ANU
                url: https://www.anu.edu.au/
        singleuser:
          memory:
            limit: 2G
            guarantee: 2G
          cpu:
            guarantee: 1
            limit: 2
          image:
            name: quay.io/mmcky/anu-emet2007
            tag: b7937f446fe6
        hub:
          config:
            Authenticator:
              username_pattern: '^(.+@2i2c\.org|.+@anu\.edu\.au|deployment-service-check)$'
  - name: utexas
    domain: utexas.pilot.2i2c.cloud
    helm_chart: basehub
    auth0:
      # connection update? Also ensure the basehub Helm chart is provided a
      # matching value for jupyterhub.custom.2i2c.add_staff_user_ids_of_type!
      connection: github
    config:
      jupyterhub:
        custom:
          2i2c:
            add_staff_user_ids_to_admin_users: true
            add_staff_user_ids_of_type: "github"
          homepage:
            templateVars:
              org:
                name: University of Texas
                logo_url: https://upload.wikimedia.org/wikipedia/en/thumb/e/e1/University_of_Texas_at_Austin_seal.svg/300px-University_of_Texas_at_Austin_seal.svg.png
                url: https://www.utexas.edu/
              designed_by:
                name: 2i2c
                url: https://2i2c.org
              operated_by:
                name: 2i2c
                url: https://2i2c.org
              funded_by:
                name: JROST & IOI
                url: https://investinopen.org/blog/jrost-rapid-response-fund-awardees
        hub:
          extraConfig:
            # Create persistent disks for each user in the hub to store postgresql data in
            100-create-postgres-pvc: |
              from jupyterhub.utils import exponential_backoff
              from kubespawner.objects import make_pvc
              from functools import partial

              def make_extra_pvc(component, name_template, storage_class, storage_capacity, spawner):
                  """
                  Create a PVC resource for storing database contents
                  """
                  labels = spawner._build_common_labels({})
                  labels.update({
                      'component': component
                  })
                  annotations = spawner._build_common_annotations({})
                  storage_selector = spawner._expand_all(spawner.storage_selector)
                  return make_pvc(
                      name=spawner._expand_all(name_template),
                      storage_class=storage_class,
                      access_modes=['ReadWriteOnce'],
                      selector={},
                      storage=storage_capacity,
                      labels=labels,
                      annotations=annotations
                  )

              # 1Gi seems the smallest PVC you can make - anything smaller than that is rounded up to 1Gi
              make_db_pvc = partial(make_extra_pvc, 'postgres-storage', 'postgres-{username}', 'standard-rwo', '1Gi')

              async def ensure_db_pvc(spawner):
                  """"
                  Ensure a PVC is created for this user's database volume
                  """
                  pvc = make_db_pvc(spawner)
                  # If there's a timeout, just let it propagate to the user
                  await exponential_backoff(
                      partial(spawner._make_create_pvc_request, pvc, spawner.k8s_api_request_timeout),
                      f'Could not create pvc {pvc.metadata.name}',
                      # Each req should be given k8s_api_request_timeout seconds.
                      timeout=spawner.k8s_api_request_retry_timeout
                  )
              c.Spawner.pre_spawn_hook = ensure_db_pvc
          config:
            Authenticator:
              allowed_users: &utexas_demo_users
                - jameshowison
              admin_users: *utexas_demo_users
        singleuser:
          storage:
            extraVolumes:
              - name: postgres-db
                persistentVolumeClaim:
                  claimName: "postgres-{username}"
            extraVolumeMounts:
              - name: postgres-db
                mountPath: /var/lib/postgresql/data
                # postgres recommends against mounting a volume directly here
                # So we put data in a subpath
                subPath: data
          initContainers:
            # /var/lib/postgresql should be writeable by uid 1000, so students
            # can blow out their db directories if need to. Also lets postgres actually
            # write to its data directory
            - name: postgres-volume-mount-hack
              image: busybox
              command:
                - sh
                - -c
                - "id && chown -R 1000:1000 /var/lib/postgresql && ls -lhd /var/lib/postgresql"
              securityContext:
                runAsUser: 0
              volumeMounts:
                - name: postgres-db
                  mountPath: /var/lib/postgresql/data
                  # postgres recommends against mounting a volume directly here
                  # So we put data in a subpath
                  subPath: data
          extraContainers:
            - name: pgadmin4
              image: dpage/pgadmin4
              env:
                # Users use this to login to pgadmin4 itself
                # Access to that is secured with jupyter-server-proxy
                - name: PGADMIN_DEFAULT_EMAIL
                  value: jovyan@jovyan.org
                - name: PGADMIN_DEFAULT_PASSWORD
                  value: jovyan
                # Don't allow outside users to even connect to pgadmin4
                - name: PGADMIN_LISTEN_ADDRESS
                  value: "127.0.0.1"
                - name: PGADMIN_LISTEN_PORT
                  value: "5050"
                # Tell pgadmin4 what base_url it's running under
                - name: SCRIPT_NAME
                  # FIXME: This doesn't work with named servers,
                  # https://github.com/jupyterhub/kubespawner/pull/565 fixes this
                  value: "/user/{username}/proxy/absolute/5050"
            - name: postgres
              image: postgres:10
              resources:
                limits:
                  # Best effort only. No more than 1 CPU
                  memory: 512Mi
                  cpu: 1.0
                requests:
                  # If we don't set requests, k8s sets requests == limits!
                  memory: 64Mi
                  cpu: 0.01
              env:
                - name: POSTGRES_HOST_AUTH_METHOD
                  value: "trust"
                - name: POSTGRES_USER
                  value: "jovyan"
              securityContext:
                runAsUser: 1000
                fsGroup: 1000
              volumeMounts:
                - name: home
                  mountPath: /home/jovyan
                  subPath: "{username}"
                - name: postgres-db
                  mountPath: /var/lib/postgresql/data
                  # postgres recommends against mounting a volume directly here
                  # So we put data in a subpath
                  subPath: data
