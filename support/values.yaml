cert-manager:
  installCRDs: true
ingress-nginx:
  controller:
    podLabels:
      hub.jupyter.org/network-access-proxy-http: 'true'
prometheus:
  networkPolicy:
    enabled: true
  alertmanager:
    enabled: false
  nodeExporter:
    tolerations:
      - effect: NoSchedule
        # Deploy onto user nodes
        key: hub.jupyter.org_dedicated
        value: user
    updateStrategy:
      type: RollingUpdate
  pushgateway:
    enabled: false
  rbac:
    create: true
  server:
    labels:
      # For HTTP access to the hub, to scrape metrics
      hub.jupyter.org/network-access-hub: 'true'
    persistentVolume:
      size: 100Gi
      storageClass: default
    retention: 90d
    service:
      type: ClusterIP

grafana:
  persistence:
    storageClassName: standard
  deploymentStrategy:
    type: Recreate

  persistence:
    enabled: true
  service:
    type: ClusterIP

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - grafana.pilot.2i2c.cloud

  # grafana.ini:
  #   server:
  #     root_url: http://grafana.datahub.berkeley.edu/
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: prometheus
          orgId: 1
          type: prometheus
          url: http://support-prometheus-server
          access: proxy
          isDefault: true
          editable: false
