basehub:
  nfs:
    enabled: true
    pv:
      enabled: true
      mountOptions:
      - soft
      - noatime
      baseShareName: /
  dask-gateway:
    enabled: true
  jupyterhub:
    custom:
      daskhubSetup:
        enabled: true
      2i2c:
        add_staff_user_ids_to_admin_users: true
        add_staff_user_ids_of_type: github
      jupyterhubConfigurator:
        enabled: false
      homepage:
        templateVars:
          org:
            url: https://www.hhmi.org/
            logo_url: https://github.com/2i2c-org/infrastructure/assets/1879041/76419ba9-6d1a-41fe-b9b7-56fd89e0da40
          designed_by:
            name: 2i2c
            url: https://2i2c.org
          operated_by:
            name: 2i2c
            url: https://2i2c.org
          funded_by:
            name: ''
            url: ''
            custom_html: <a href="https://www.hhmi.org/">HHMI</a> and <a href="https://strategiesos.org/about/">Stratos</a>
    singleuser:
      cloudMetadata:
        blockWithIptables: false
      extraContainers:
      - name: mysql
        image: datajoint/mysql:8.0   # following the spyglass tutorial at https://lorenfranklab.github.io/spyglass/latest/notebooks/00_Setup/#existing-database
        ports:
        - name: mysql
          containerPort: 3306
        resources:
          limits:
              # Best effort only. No more than 1 CPU, and if mysql uses more than 4G, restart it
            memory: 4Gi
            cpu: 1.0
          requests:
              # If we don't set requests, k8s sets requests == limits!
              # So we set something tiny
            memory: 64Mi
            cpu: 0.01
        env:
            # Configured using the env vars documented in https://lorenfranklab.github.io/spyglass/latest/notebooks/00_Setup/#existing-database
        - name: MYSQL_ROOT_PASSWORD
          value: tutorial
      defaultUrl: /lab
      storage:
        extraVolumeMounts:
        - name: home
          mountPath: /home/jovyan/shared-public
          subPath: _shared-public
          readOnly: false
        - name: home
          mountPath: /home/jovyan/shared-readonly
          subPath: _shared
          readOnly: true
        - name: dev-shm
          mountPath: /dev/shm
        - name: home
          mountPath: /home/rstudio
          subPath: '{escaped_username}'
        - name: home
          mountPath: /home/rstudio/shared
          subPath: _shared
          readOnly: true
      initContainers:
      - name: volume-mount-ownership-fix
        image: busybox:1.36.1
        command:
        - sh
        - -c
        - id && chown 1000:1000 /home/jovyan /home/jovyan/shared-readonly /home/jovyan/shared-public && ls -lhd /home/jovyan
        securityContext:
          runAsUser: 0
        volumeMounts:
        - name: home
          mountPath: /home/jovyan
          subPath: '{escaped_username}'
            # Mounted without readonly attribute here,
            # so we can chown it appropriately
        - name: home
          mountPath: /home/jovyan/shared-readonly
          subPath: _shared
        - name: home
          mountPath: /home/jovyan/shared-public
          subPath: _shared-public
      profileList:
      - display_name: Loren Frank Lab
        description: Spyglass-NWB container for the Loren Frank Lab
        slug: lorenfrank
        profile_options:
          requests: &profile_option_requests
            display_name: Resource Allocation
            choices:
                # choices were generated using the command (GKE 1.29 compatible):
                # deployer generate resource-allocation choices --num-allocations 4 n2-highmem-4
              mem_3_4:
                display_name: 3.4 GB RAM, upto 3.4 CPUs
                kubespawner_override:
                  mem_guarantee: 3620925866
                  mem_limit: 3620925866
                  cpu_guarantee: 0.43125
                  cpu_limit: 3.45
                  node_selector:
                    node.kubernetes.io/instance-type: n2-highmem-4
                default: true
              mem_6_7:
                display_name: 6.7 GB RAM, upto 3.4 CPUs
                kubespawner_override:
                  mem_guarantee: 7241851732
                  mem_limit: 7241851732
                  cpu_guarantee: 0.8625
                  cpu_limit: 3.45
                  node_selector:
                    node.kubernetes.io/instance-type: n2-highmem-4
              mem_13_5:
                display_name: 13.5 GB RAM, upto 3.4 CPUs
                kubespawner_override:
                  mem_guarantee: 14483703464
                  mem_limit: 14483703464
                  cpu_guarantee: 1.725
                  cpu_limit: 3.45
                  node_selector:
                    node.kubernetes.io/instance-type: n2-highmem-4
              mem_27_0:
                display_name: 27.0 GB RAM, upto 3.4 CPUs
                kubespawner_override:
                  mem_guarantee: 28967406928
                  mem_limit: 28967406928
                  cpu_guarantee: 3.45
                  cpu_limit: 3.45
                  node_selector:
                    node.kubernetes.io/instance-type: n2-highmem-4
          image:
            display_name: Image
            unlisted_choice:
              enabled: true
              display_name: Custom image
              validation_regex: ^.+:.+$
              validation_message: Must be a publicly available docker image, of form <image-name>:<tag>
              kubespawner_override:
                image: '{value}'
            choices:
              spyglass:
                display_name: Spyglass
                slug: spyglass
                kubespawner_override:
                  image: quay.io/lorenlab/hhmi-spyglass-image:62b90867ea22
      - display_name: Janelia Cellmap
        description: Dacapo container for Janelia Cellmap
        slug: cellmap
        profile_options:
          requests: *profile_option_requests
          image:
            display_name: Image
            unlisted_choice:
              enabled: true
              display_name: Custom image
              validation_regex: ^.+:.+$
              validation_message: Must be a publicly available docker image, of form <image-name>:<tag>
              kubespawner_override:
                image: '{value}'
            choices:
              dacapo:
                display_name: Dacapo
                slug: dacapo
                kubespawner_override:
                  image: quay.io/2i2c/dacapo-image:42b606702986
      - display_name: Community Images
        default: true
        description: Start a container with a community maintained image
        slug: community
        profile_options:
          requests: *profile_option_requests
          image:
            display_name: Image
            choices:
              pangeo:
                display_name: Pangeo Notebook
                slug: pangeo
                default: true
                kubespawner_override:
                    # Use JupyterLab <4 so that jupyterlab-git works
                  image: pangeo/pangeo-notebook:2023.07.05
              rocker:
                display_name: Rocker RStudio
                slug: rocker
                kubespawner_override:
                  image: rocker/binder:4.3
                  image_pull_policy: Always
                    # Launch RStudio after the user logs in
                  default_url: /rstudio
                    # Ensures container working dir is homedir
                    # https://github.com/2i2c-org/infrastructure/issues/2559
                  working_dir: /home/rstudio
              desktop:
                display_name: Linux desktop
                slug: desktop
                kubespawner_override:
                    # Launch people directly into the Linux desktop when they start
                  default_url: /desktop
                    # Built from https://github.com/jupyterhub/jupyter-remote-desktop-proxy/pull/51
                  image: quay.io/2i2c/nasa-qgis-image:babb0fa15dfa
    hub:
      allowNamedServers: true
      config:
        JupyterHub:
          authenticator_class: cilogon
        CILogonOAuthenticator:
          allowed_idps:
            http://github.com/login/oauth/authorize:
              default: true
              username_derivation:
                username_claim: preferred_username
        OAuthenticator:
          # WARNING: Don't use allow_existing_users with config to allow an
          #          externally managed group of users, such as
          #          GitHubOAuthenticator.allowed_organizations, as it breaks a
          #          common expectations for an admin user.
          #
          #          The broken expectation is that removing a user from the
          #          externally managed group implies that the user won't have
          #          access any more. In practice the user will still have
          #          access if it had logged in once before, as it then exists
          #          in JupyterHub's database of users.
          #
          allow_existing_users: true
        Authenticator:
          # WARNING: Removing a user from admin_users or allowed_users doesn't
          #          revoke admin status or access.
          #
          #          OAuthenticator.allow_existing_users allows any user in the
          #          JupyterHub database of users able to login. This includes
          #          any previously logged in user or user previously listed in
          #          allowed_users or admin_users, as such users are added to
          #          JupyterHub's database on startup.
          #
          #          To revoke admin status or access for a user when
          #          allow_existing_users is enabled, first remove the user from
          #          admin_users or allowed_users, then deploy the change, and
          #          finally revoke the admin status or delete the user via the
          #          /hub/admin panel.
          #
          admin_users:
          - colliand

  jupyterhub-home-nfs:
    enabled: true
    prometheusExporter:
      enabled: true
    gke:
      enabled: true
