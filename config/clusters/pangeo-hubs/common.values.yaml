basehub:
  nfs:
    enabled: true
    pv:
      mountOptions:
        - soft
        - noatime
      # Google FileStore IP
      serverIP: 10.229.44.234
      # Name of Google Filestore share
      baseShareName: /homes/
  jupyterhub:
    custom:
      2i2c:
        add_staff_user_ids_to_admin_users: true
        add_staff_user_ids_of_type: "github"
      cloudResources:
        provider: gcp
        gcp:
          projectId: pangeo-integration-te-3eea
        scratchBucket:
          enabled: true
      homepage:
        templateVars:
          org:
            name: Pangeo
            url: https://pangeo.io
            logo_url: "https://raw.githubusercontent.com/pangeo-data/pangeo/master/docs/_static/pangeo_simple_logo.svg"
          designed_by:
            name: 2i2c
            url: https://2i2c.org
          operated_by:
            name: 2i2c
            url: https://2i2c.org
          funded_by:
            name: NSF EarthCube Program (Award ICER-2026932)
            url: "https://www.nsf.gov/awardsearch/showAward?AWD_ID=2026932"
    hub:
      allowNamedServers: true
      config:
        Authenticator:
          # This hub uses GitHub Teams auth and so we don't set
          # allowed_users in order to not deny access to valid members of
          # the listed teams. These people should have admin access though.
          admin_users:
            - rabernat
            - jhamman
            - scottyhq
            - TomAugspurger
        JupyterHub:
          authenticator_class: github
        GitHubOAuthenticator:
          allowed_organizations:
            - pangeo-data:us-central1-b-gcp
            - 2i2c-org:hub-access-for-2i2c-staff
          scope:
            - read:org
    singleuser:
      extraEnv:
        GH_SCOPED_CREDS_CLIENT_ID: "Iv1.c90ee430400a347f"
        GH_SCOPED_CREDS_APP_URL: https://github.com/apps/pangeo-gcp-hub-push-access
      # User image repo: https://github.com/pangeo-data/pangeo-docker-images
      image:
        name: pangeo/pangeo-notebook
        tag: "2023.01.03"
      profileList:
        # The mem-guarantees are here so k8s doesn't schedule other pods
        # on these nodes. They need to be just under total allocatable
        # RAM on a node, not total node capacity. Values calculated using
        # https://learnk8s.io/kubernetes-instance-calculator
        - display_name: "Small"
          description: 5GB RAM, 2 CPUs
          default: true
          allowed_teams:
            - pangeo-data:us-central1-b-gcp
            - 2i2c-org:hub-access-for-2i2c-staff
          kubespawner_override:
            mem_limit: 7G
            mem_guarantee: 4.5G
            node_selector:
              node.kubernetes.io/instance-type: n1-standard-2
        - display_name: Medium
          description: 11GB RAM, 4 CPUs
          allowed_teams:
            - pangeo-data:us-central1-b-gcp
            - 2i2c-org:hub-access-for-2i2c-staff
          kubespawner_override:
            mem_limit: 15G
            mem_guarantee: 11G
            node_selector:
              node.kubernetes.io/instance-type: n1-standard-4
        - display_name: Large
          description: 24GB RAM, 8 CPUs
          allowed_teams:
            - pangeo-data:cds-lab
            - 2i2c-org:hub-access-for-2i2c-staff
          kubespawner_override:
            mem_limit: 30G
            mem_guarantee: 24G
            node_selector:
              node.kubernetes.io/instance-type: n1-standard-8
        - display_name: Huge
          description: 52GB RAM, 16 CPUs
          allowed_teams:
            - pangeo-data:cds-lab
            - 2i2c-org:hub-access-for-2i2c-staff
          kubespawner_override:
            mem_limit: 60G
            mem_guarantee: 52G
            node_selector:
              node.kubernetes.io/instance-type: n1-standard-16
dask-gateway:
  gateway:
    backend:
      scheduler:
        cores:
          request: 0.8
          limit: 1
        memory:
          request: 1G
          limit: 2G
