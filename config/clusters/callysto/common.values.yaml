nfs:
  enabled: true
  pv:
    mountOptions:
      - soft # We pick soft over hard, so NFS lockups don't lead to hung processes
      - noatime
    # Google FileStore IP
    serverIP: 10.93.235.178
    # Name of Google Filestore share
    baseShareName: /homes/
jupyterhub:
  # pre-puller is necessary as the image is pretty big, and
  # pulling during first user spawn might cause timeouts and poor user
  # experience. Also helps with node pre-warming.
  prePuller:
    continuous:
      enabled: true
    hook:
      enabled: true
  custom:
    2i2c:
      add_staff_user_ids_to_admin_users: false
      # add_staff_user_ids_of_type: "google"
    homepage:
      templateVars:
        org:
          name: Callysto
          url: https://www.callysto.ca
          logo_url: https://www.callysto.ca/wp-content/uploads/2022/08/Callysto-HUB_vertical.png
        designed_by:
          name: 2i2c
          url: https://2i2c.org
        operated_by:
          name: 2i2c
          url: https://2i2c.org
        funded_by:
          name: Callysto
          url: https://www.callysto.ca
  singleuser:
    image:
      name: callysto/2i2c
      tag: 0.1.4
    extraFiles:
      tree.html:
        mountPath: /usr/local/share/jupyter/custom_template/tree.html
        stringData: |
          {% extends "templates/tree.html" %}
          {% block header %}
          <style>
          .clusters_tab_link {
            visibility: hidden;
          }
          </style>
          {% endblock %}
          {% block logo %}
            <img src="https://www.callysto.ca/wp-content/uploads/2022/08/Callysto-HUB_horizontal.png" alt="CallystoHub"/>
          {% endblock %}
      notebook.html:
        mountPath: /usr/local/share/jupyter/custom_template/notebook.html
        stringData: |
          {% extends "templates/notebook.html" %}
          {% block logo %}
            <img src="https://www.callysto.ca/wp-content/uploads/2022/08/Callysto-HUB_horizontal.png" alt="CallystoHub"/>
          {% endblock %}
  hub:
    extraConfig:
      001-cilogon-email-auth: |
        # Custom override of CILogonOAuthenticator to allow access control via one
        # property (email) while the username itself is a different property (oidc).
        # This allows us to restrict access based on the *email* of the authenticated
        # user without having to store the actual email in our servers.
        from oauthenticator.cilogon import CILogonOAuthenticator
        from fnmatch import fnmatch
        from traitlets import List, Unicode

        class EmailAuthenticatingCILogonOAuthenticator(CILogonOAuthenticator):
          allowed_domains = List(
            Unicode,
            default=None,
            # This must always be set!
            allow_none=False,
            help="""
            Allow access to users with verified emails belonging to these domains.

            Allows glob patterns but not regexes. So you can allow access to
            *.edu, for example. See https://docs.python.org/3/library/fnmatch.html for
            list of allowed patterns.
            """,
            config=True
          )

          async def authenticate(self, *args, **kwargs):
            authenticated_user = await super().authenticate(*args, **kwargs)

            email = authenticated_user['auth_state']['cilogon_user']['email']

            domain = email.rsplit('@', 1)[1]
            for ad in self.allowed_domains:
              # fnmatch will allow us to use wildcards like * and ?, but not the full
              # regex. For simple domain matching this is good enough. If we were to
              # use regexes instead, people will have to escape all their '.'s, and since
              # that is actually going to match 'any character' it is a possible security hole.
              if fnmatch(domain, ad):
                return authenticated_user

            return None

        c.JupyterHub.authenticator_class = EmailAuthenticatingCILogonOAuthenticator
    config:
      EmailAuthenticatingCILogonOAuthenticator:
        allowed_domains:
          - 2i2c.org
          - btps.ca
          - callysto.ca
          - cssd.ab.ca
          - cybera.ca
          - eics.ab.ca
          - eips.ca
          - epsb.ca
          - fmpsd.ab.ca
          - fmcsd.ab.ca
          - rvschools.ab.ca
          - spschools.org
          - wsrd.ca
          - ucalgary.ca
          - ualberta.ca
          - cfis.com
          - "*.ca"
      CILogonOAuthenticator:
        # We set up admin_users, but *not* allowed users. Those are set up via the extraConfig
        admin_users: &callysto_users
          - "117859169473992122769" # Georgiana (2i2c)
          - "115722756968212778437" # Sarah (2i2c)
          - "103849660365364958119" # Erik (2i2c)
          - "115240156849150087300" # Ian Allison (PIMS)
          - "102749090965437723445" # Byron Chu (Cybera)
          - "115909958579864751636" # Michael Jones (Cybera)
          - "106951135662332329542" # Elmar Bouwer (Cybera)
        # Only show the option to login with Google and Mirosoft
        shown_idps:
          - https://accounts.google.com/o/oauth2/auth
          - https://login.microsoftonline.com/common/oauth2/v2.0/authorize
        allowed_idps:
          http://google.com/accounts/o8/id:
            username_derivation:
              username_claim: "oidc"
          http://login.microsoftonline.com/common/oauth2/v2.0/authorize:
            username_derivation:
              username_claim: "oidc"
