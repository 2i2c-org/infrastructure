{{- if .Values.dex.enabled -}}
kind: ConfigMap
apiVersion: v1
metadata:
  name: dex
  labels:
    app: dex
data:
  dex.yaml: |
    issuer: https://{{ .Values.dex.hubHostName }}/services/dex
    storage:
      type: sqlite3
      config:
        # /srv/db is a PVC mounted for persistence
        file: /srv/db/dex.sqlite

    web:
      # Listen on all interfaces, so this is publicly visible
      http: 0.0.0.0:5556

    oauth2:
      # Don't explicitly require users to grant access via the
      # dex interface, for a smoother experience
      skipApprovalScreen: true

    connectors:
    - type: oauth
      id: hub
      name: hub
      config:
        clientID: service-dex
        # Env vars are expanded via gomplate, which is present in the
        # upstream dex docker image
        clientSecret:  {{ "{{" }} .Env.HUB_OAUTH2_CLIENT_SECRET {{ "}}" }}
        redirectURI: https://{{ .Values.dex.hubHostName }}/services/dex/callback
        userIDKey: name
        tokenURL: http://proxy-public/hub/api/oauth2/token
        authorizationURL: https://{{ .Values.dex.hubHostName }}/hub/api/oauth2/authorize
        userInfoURL: http://proxy-public/hub/api/user

    staticClients:
    - id: oauth2-proxy
      redirectURIs:
      -  https://{{ .Values.dex.hubHostName }}/services/oauth2-proxy/oauth2/callback
      name: oauth2-proxy
      # Env vars are expanded via gomplate, which is present in the
      # upstream dex docker image
      secret: {{ "{{" }} .Env.OAUTH2_PROXY_CLIENT_SECRET {{ "}}" }}
  oauth2-proxy.cfg: |
    provider = "oidc"
    # This is hardcoded in the dex config
    client_id = "oauth2-proxy"
    redirect_url = "https://{{ .Values.dex.hubHostName }}/services/oauth2-proxy/oauth2/callback"
    oidc_issuer_url = "https://{{ .Values.dex.hubHostName }}/services/dex"
    oidc_email_claim = "sub"
    # We don't actually use email for anything here, so skip email verification
    insecure_oidc_allow_unverified_email = true
    email_domains = "*"
    # Listen on port 9000
    http_address = "http://0.0.0.0:9000"
    # Don't require user interaction to log in - treat this more like SSO
    skip_provider_button = true
    # This is exposed to the internet as a JupyterHub service,
    # so it is only available prefixed with this URL
    reverse_proxy = true
    proxy_prefix = "/services/oauth2-proxy/oauth2"
{{- end }}
