{{ if .Values.nfsPVC.enabled }}
{{ if .Values.nfsPVC.shareCreator.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: nfs-share-creator
  labels:
    hub.jupyter.org/deletable: "true"
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "10"
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      terminationGracePeriodSeconds: 0
      tolerations: {{ .Values.nfsPVC.shareCreator.tolerations | toJson }}

      containers:
        - name: dummy
          image: busybox
          env:
            - name: NFS_SHARE_NAME
              value: "{{ .Values.nfsPVC.nfs.baseShareName }}{{ .Release.Name }}"
          command:
            - /bin/sh
            - -c
            - "mkdir -p /mnt${NFS_SHARE_NAME} && chown 1000:1000 /mnt${NFS_SHARE_NAME} && mount && ls -la /mnt/"
          volumeMounts:
            # Mount the the base of the filesystem (which must be "/" on EFS as
            # it will hang if trying to mount a path that isn't created
            # already).
            - name: home-base
              mountPath: /mnt{{ .Values.nfsPVC.nfs.baseShareName }}
      volumes:
        # Directly references the NFS server in order to create folders and
        # update permissions. Note that this does not rely on the PV or PVC
        # objects to be created.
        - name: home-base
          nfs:
            server: {{ .Values.nfsPVC.nfs.serverIP | quote }}
            path: {{ .Values.nfsPVC.nfs.baseShareName | quote }}
{{ end }}
{{ end }}
