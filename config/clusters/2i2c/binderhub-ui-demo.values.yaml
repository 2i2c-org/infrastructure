jupyterhub:
  ingress:
    hosts:
      - hub.binderhub-ui-demo.2i2c.cloud
    tls:
      - secretName: https-auto-tls
        hosts:
          - hub.binderhub-ui-demo.2i2c.cloud
  custom:
    2i2c:
      add_staff_user_ids_to_admin_users: true
      add_staff_user_ids_of_type: "google"
    jupyterhubConfigurator:
      enabled: false
    binderhubUI:
      enabled: true
    homepage:
      templateVars:
        org:
          name: Demo binderhub UI with binderhub-service
          url: https://2i2c.org
          logo_url: https://2i2c.org/media/logo.png
        designed_by:
          name: 2i2c
          url: https://2i2c.org
        operated_by:
          name: 2i2c
          url: https://2i2c.org
        funded_by:
          name: ""
          url: ""
  singleuser:
    # This is copied from https://binderhub.readthedocs.io/en/latest/authentication.html#enabling-authentication
    # to make notebook servers aware of hub
    cmd: jupyterhub-singleuser
    storage:
      type: none
  hub:
    redirectToServer: false
    services:
      binder:
        # FIXME: ref https://github.com/2i2c-org/binderhub-service/issues/57
        # for something more readable and requiring less copy-pasting
        display: false
        oauth_no_confirm: true
        url: http://binderhub-ui-demo-binderhub-service:8090
        oauth_redirect_uri: https://binderhub-ui-demo.2i2c.cloud/oauth_callback
    loadRoles:
      user:
        scopes:
          - self
          - "access:services"
    config:
      BinderSpawnerMixin:
        auth_enabled: true
      JupyterHub:
        authenticator_class: cilogon
      CILogonOAuthenticator:
        oauth_callback_url: "https://hub.binderhub-ui-demo.2i2c.cloud/hub/oauth_callback"
        allowed_idps:
          http://google.com/accounts/o8/id:
            username_derivation:
              username_claim: "email"
binderhub-service:
  enabled: true
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 256m
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - binderhub-ui-demo.2i2c.cloud
    tls:
      - secretName: binder-https-auto-tls
        hosts:
          - binderhub-ui-demo.2i2c.cloud
  config:
    BinderHub:
      base_url: /
      hub_url: https://hub.binderhub-ui-demo.2i2c.cloud
      badge_base_url: https://binderhub-ui-demo.2i2c.cloud
      auth_enabled: true
      enable_api_only_mode: false
      image_prefix: us-central1-docker.pkg.dev/two-eye-two-see/binderhub-ui-demo-registry/binderhub-service-
  extraConfig:
    # FIXME: set KubernetesBuildExecutor.push_secret again
    #        without this for some reason the build pods
    #        search after the wrong secret name (i.e. the default name)
    #        set by binderhub in KubernetesBuildExecutor.push_secret
    01-binderhub-service-set-push-secret: |
      import os
      c.KubernetesBuildExecutor.push_secret = os.environ["PUSH_SECRET_NAME"]
  extraEnv:
    - name: JUPYTERHUB_API_TOKEN
      valueFrom:
        secretKeyRef:
          name: '{{ include "jupyterhub.hub.fullname" . }}'
          key: hub.services.binder.apiToken
    - name: JUPYTERHUB_CLIENT_ID
      value: "service-binder"
    - name: JUPYTERHUB_API_URL
      value: "https://hub.binderhub-ui-demo.2i2c.cloud/hub/api"
    # Without this, the redirect URL to /hub/api/... gets
    # appended to binderhub's URL instead of the hub's
    - name: JUPYTERHUB_BASE_URL
      value: "https://hub.binderhub-ui-demo.2i2c.cloud/"
    - name: JUPYTERHUB_OAUTH_CALLBACK_URL
      value: "https://binderhub-ui-demo.2i2c.cloud/oauth_callback"
  # The password to the registry is stored encrypted in the hub's encrypted config file
  buildPodsRegistryCredentials:
    server: "https://us-central1-docker.pkg.dev"
    username: "_json_key"
