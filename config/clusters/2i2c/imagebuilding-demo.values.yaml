jupyterhub:
  ingress:
    hosts:
      - imagebuilding-demo.2i2c.cloud
    tls:
      - secretName: https-auto-tls
        hosts:
          - imagebuilding-demo.2i2c.cloud
  custom:
    2i2c:
      add_staff_user_ids_to_admin_users: true
      add_staff_user_ids_of_type: "google"

    homepage:
      templateVars:
        org:
          name: Demo image building with binderhub-service
          url: https://2i2c.org
          logo_url: https://2i2c.org/media/logo.png
        designed_by:
          name: 2i2c
          url: https://2i2c.org
        operated_by:
          name: 2i2c
          url: https://2i2c.org
        funded_by:
          name: ""
          url: ""
          custom_html: <a href="https://www.dfg.de/">DFG</a>, <a href="https://www.cessda.eu/">CESSDA</a>, <a href="https://www.gesis.org/">GESIS</a>, FKZ/Project number <a href="https://gepris.dfg.de/gepris/projekt/460234259?language=en">460234259</a>
  singleuser:
    profileList:
      - display_name: "Only Profile Available, this info is not shown in the UI"
        slug: only
        profile_options:
          image:
            display_name: Image
            unlisted_choice: &profile_list_unlisted_choice
              enabled: True
              display_name: "Custom image"
              validation_regex: "^.+:.+$"
              validation_message: "Must be a publicly available docker image, of form <image-name>:<tag>"
              kubespawner_override:
                image: "{value}"
            choices:
              pangeo:
                display_name: Pangeo Notebook Image
                kubespawner_override:
                  image: pangeo/pangeo-notebook:2023.09.11
              geospatial:
                display_name: Rocker Geospatial
                default: true
                slug: geospatial
                kubespawner_override:
                  image: rocker/binder:4.3
                  # Launch into RStudio after the user logs in
                  default_url: /rstudio
                  # Ensures container working dir is homedir
                  # https://github.com/2i2c-org/infrastructure/issues/2559
                  working_dir: /home/rstudio
                  # Because this is a list, it will override our default volume mounts
                  volume_mounts:
                    # Mount the user home directory
                    - name: home
                      mountPath: /home/rstudio
                      subPath: "{username}"
                    # Mount the shared readonly directory
                    - name: home
                      mountPath: /home/rstudio/shared
                      subPath: _shared
                      readOnly: true
              scipy:
                display_name: Jupyter SciPy Notebook
                slug: scipy
                kubespawner_override:
                  image: jupyter/scipy-notebook:2023-06-26
          resources:
            display_name: Resource Allocation
            choices:
              mem_2_7:
                display_name: 2.7 GB RAM, upto 3.479 CPUs
                kubespawner_override:
                  mem_guarantee: 2904451072
                  mem_limit: 2904451072
                  cpu_guarantee: 0.434875
                  cpu_limit: 3.479
                  node_selector:
                    node.kubernetes.io/instance-type: n1-highmem-4
                default: true
              mem_5_4:
                display_name: 5.4 GB RAM, upto 3.479 CPUs
                kubespawner_override:
                  mem_guarantee: 5808902144
                  mem_limit: 5808902144
                  cpu_guarantee: 0.86975
                  cpu_limit: 3.479
                  node_selector:
                    node.kubernetes.io/instance-type: n1-highmem-4
              mem_10_8:
                display_name: 10.8 GB RAM, upto 3.479 CPUs
                kubespawner_override:
                  mem_guarantee: 11617804288
                  mem_limit: 11617804288
                  cpu_guarantee: 1.7395
                  cpu_limit: 3.479
                  node_selector:
                    node.kubernetes.io/instance-type: n1-highmem-4
              mem_21_6:
                display_name: 21.6 GB RAM, upto 3.479 CPUs
                kubespawner_override:
                  mem_guarantee: 23235608576
                  mem_limit: 23235608576
                  cpu_guarantee: 3.479
                  cpu_limit: 3.479
                node_selector:
                  node.kubernetes.io/instance-type: n1-highmem-4
  hub:
    services:
      binder:
        # FIXME: ref https://github.com/2i2c-org/binderhub-service/issues/57
        # for something more readable and requiring less copy-pasting
        url: http://imagebuilding-demo-binderhub-service:8090
    image:
      name: quay.io/2i2c/dynamic-image-building-experiment
      tag: "0.0.1-0.dev.git.7022.h56cdd5c1"
    config:
      JupyterHub:
        authenticator_class: cilogon
      CILogonOAuthenticator:
        oauth_callback_url: "https://imagebuilding-demo.2i2c.cloud/hub/oauth_callback"
        shown_idps:
          - http://google.com/accounts/o8/id
        allowed_idps:
          http://google.com/accounts/o8/id:
            username_derivation:
              username_claim: "email"
            allowed_domains:
              - "2i2c.org"

    extraConfig:
      enable-prototype-UI: |
        from kubespawner_dynamic_building_ui import TEMPLATE_PATHS, STATIC_HANDLER_TUPLE
        c.KubeSpawner.additional_profile_form_template_paths = TEMPLATE_PATHS

        # Add extra handler to serve JS & CSS assets
        c.JupyterHub.extra_handlers.append(STATIC_HANDLER_TUPLE)

binderhub-service:
  nodeSelector:
    hub.jupyter.org/node-purpose: core
  enabled: true
  service:
    port: 8090
  # The DaemonSet at https://github.com/2i2c-org/binderhub-service/blob/main/binderhub-service/templates/docker-api/daemonset.yaml
  # will start a docker-api pod on a user node.
  # It starts the [dockerd](https://docs.docker.com/engine/reference/commandline/dockerd/) daemon,
  # that will be accessible via a unix socket, mounted by the build.
  # The docker-api pod must run on the same node as the builder pods.
  dockerApi:
    nodeSelector:
      hub.jupyter.org/node-purpose: user
    tolerations:
      # Tolerate tainted jupyterhub user nodes
      - key: hub.jupyter.org_dedicated
        value: user
        effect: NoSchedule
      - key: hub.jupyter.org/dedicated
        value: user
        effect: NoSchedule
  config:
    BinderHub:
      base_url: /services/binder
      use_registry: true
      # Re-uses the registry created for the `binderhub-staging` hub
      # but pushes images under a different prefix
      image_prefix: us-central1-docker.pkg.dev/two-eye-two-see/binder-staging-registry/binderhub-service-
    KubernetesBuildExecutor:
      node_selector:
        # Schedule builder pods to run on user nodes only
        hub.jupyter.org/node-purpose: user
  # The password to the registry is stored encrypted in the hub's encrypted config file
  buildPodsRegistryCredentials:
    server: "https://us-central1-docker.pkg.dev"
    username: "_json_key"
