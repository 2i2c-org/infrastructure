nfs:
  # No persistent storage for cosmicds
  enabled: false
  pv:
    enabled: false

jupyterhub:
  ingress:
    hosts:
      - cosmicds.2i2c.cloud
    tls:
      - secretName: https-auto-tls
        hosts:
          - cosmicds.2i2c.cloud
  custom:
    singleuserAdmin:
      # Disable shared-readwrite mount, as we don't have any mounts enabled
      extraVolumeMounts: []
    auth:
      anonymizeUsername: true
    2i2c:
      add_staff_user_ids_to_admin_users: true
      add_staff_user_ids_of_type: "github"
    homepage:
      templateVars:
        org:
          name: Cosmic DS, Harvard
          url: https://www.cosmicds.cfa.harvard.edu/
          logo_url: https://pweb.cfa.harvard.edu/sites/default/files/styles/max_650x650/public/2021-02/CosmicDS_Logo_NoNASA_logo---Allison-Blackwell.jpg?itok=Y44JjtDv
        designed_by:
          name: 2i2c
          url: https://2i2c.org
        operated_by:
          name: 2i2c
          url: https://2i2c.org
        funded_by:
          name: Cosmic DS, Harvard
          url: https://www.cosmicds.cfa.harvard.edu/
  singleuser:
    # No persistent storage should be kept to reduce any potential data
    # retention & privacy issues.
    # Ref https://github.com/2i2c-org/infrastructure/issues/2128#issuecomment-1635107926
    initContainers: []
    storage:
      # Must set jupyterhub.custom.singleuserAdmin.extraVollumeMounts to [] as well
      type: none
      extraVolumeMounts: []
    cpu:
      # Authentication is wide open here, so let's limit how much CPU a single user can use
      # more actively. This is to limit the amount of damage a rogue user can do to not more
      # than 1 CPU per user account.
      limit: 1
    memory:
      # Ref https://2i2c.freshdesk.com/a/tickets/1088
      guarantee: 512M
      limit: 2G
  hub:
    services:
      # OAuth2 credentials for the CosmicDS portal, which uses
      # this JupyterHub as authentication *provider*. So when users hit
      # "Login" in the CosmicDS portal, they're actually redirected to this
      # JupyterHub (via auth0). This ensures that the portal knows exactly
      # the (anonymized) usernames of these users, and can do additional work
      # on their part to track them as necessary.
      cosmicds-portal:
        # Don't display this service under 'services' in control panel
        display: false
        # Don't ask end user if they want to authorize this service explicitly
        # This is a trusted service, and we are being used as *authentication*
        # in this case.
        oauth_no_confirm: true
        name: cosmicds-portal
        oauth_client_id: service-cosmicds-portal
        # Callback URL for the auth0 tenant, provided to us by auth0
        oauth_redirect_uri: https://dev-tbr72rd5whnwlyrg.us.auth0.com/login/callback
    config:
      JupyterHub:
        authenticator_class: cilogon
      CILogonOAuthenticator:
        oauth_callback_url: https://cosmicds.2i2c.cloud/hub/oauth_callback
        allowed_idps:
          http://github.com/login/oauth/authorize:
            default: true
            username_derivation:
              username_claim: "preferred_username"
            allow_all: true
      Authenticator:
        admin_users:
          - nmearl
          - patudom
        # When using JupyterHub as an auth *provider*, we don't want the
        # end user to see the JupyterHub home page at all - just redirect
        # them to the upstream auth provider (CILogon) directly.
        auto_login_oauth2_authorize: true
