jupyterhub:
  ingress:
    hosts:
      - imagebuilding-demo.2i2c.cloud
    tls:
      - secretName: https-auto-tls
        hosts:
          - imagebuilding-demo.2i2c.cloud
  custom:
    2i2c:
      add_staff_user_ids_to_admin_users: true
      add_staff_user_ids_of_type: "google"
    homepage:
      templateVars:
        org:
          name: demo image building with binderhub-service
          url: https://2i2c.org
          logo_url: https://2i2c.org/media/logo.png
        designed_by:
          name: 2i2c
          url: https://2i2c.org
        operated_by:
          name: 2i2c
          url: https://2i2c.org
        funded_by:
          name: 2i2c
          url: https://2i2c.org
  hub:
    image:
      name: quay.io/2i2c/dynamic-image-building-experiment
      tag: "0.0.1-0.dev.git.6478.h0ab34873"
    config:
      JupyterHub:
        authenticator_class: cilogon
      CILogonOAuthenticator:
        oauth_callback_url: "https://imagebuilding-demo.2i2c.cloud/hub/oauth_callback"
        username_claim: "email"
        # Only show the option to login with Google
        shown_idps:
          - http://google.com/accounts/o8/id

binderhub-service:
  nodeSelector:
    hub.jupyter.org/node-purpose: core
  enabled: true
  service:
    port: 8090
  # The DaemonSet at https://github.com/2i2c-org/binderhub-service/blob/main/binderhub-service/templates/docker-api/daemonset.yaml
  # will start a docker-api pod on a user node.
  # It starts the [dockerd](https://docs.docker.com/engine/reference/commandline/dockerd/) daemon,
  # that will be accessible via a unix socket, mounted by the build.
  # The docker-api pod must run on the same node as the builder pods.
  dockerApi:
    nodeSelector:
      hub.jupyter.org/node-purpose: user
    tolerations:
      # Tolerate tainted jupyterhub user nodes
      - key: hub.jupyter.org_dedicated
        value: user
        effect: NoSchedule
      - key: hub.jupyter.org/dedicated
        value: user
        effect: NoSchedule
  config:
    BinderHub:
      use_registry: true
      # Re-uses the registry created for the `binderhub-staging` hub
      # but pushes images under a different prefix
      image_prefix: us-central1-docker.pkg.dev/two-eye-two-see/binder-staging-registry/binderhub-service-
    KubernetesBuildExecutor:
      node_selector:
        # Schedule builder pods to run on user nodes only
        hub.jupyter.org/node-purpose: user
  # The password to the registry is stored encrypted in the hub's encrypted config file
  buildPodsRegistryCredentials:
    server: "https://us-central1-docker.pkg.dev"
    username: "_json_key"
