$schema: 'http://json-schema.org/draft-07/schema#'
type: object
additionalProperties: false
properties:
  name:
    type: string
    description: |
      Name of the cluster, used primarily to identify it in
      the deploy script. The file should be named as
      {name}.cluster.yaml
  image_repo:
    type: string
  support:
    type: object
    additionalProperties: false
    description: |
      Configuration for support components (ingress, monitoring, etc)
      to be enabled for this cluster.
    properties:
      config:
        type: object
        description: |
          Additional YAML values to be deployed with the support chart
  provider:
    type: string
    description: |
      Cloud provider this cluster is running on. Used to perform
      authentication against the cluster. Currently supports gcp
      and raw kubeconfig files.
    enum:
      - gcp
      - kubeconfig
      - aws
  kubeconfig:
    type: object
    description: |
      Configuration to connect to a cluster purely via a kubeconfig
      file.
    additionalProperties: false
    properties:
      file:
        type: string
        descriptiON: |
          Path to kubeconfig file (encrypted with sops) to use for
          connecting to the cluster
  gcp:
    type: object
    additionalProperties: false
    description: |
      Configuration to connect to the cluster on GCP. Is used when
      provider is set to `gcp`
    properties:
      key:
        type: string
        description: |
          Path to a `sops` encrypted service account JSON key that
          can be used by `gcloud` to authenticate to GCP, with
          enough rights to get full access to the kubernetes cluster
      project:
        type: string
        description: |
          Project ID of the GCP project that contains this cluster
      cluster:
        type: string
        description: |
          Name of the cluster inside this GCP project
      zone:
        type: string
        description: |
          If the cluster is a zonal cluster, this specifies the zone
          in which the cluster is. If it's a regional cluster, this
          specifies the region the cluster is in.
    required:
      - key
      - project
      - cluster
      - zone
  aws:
    type: object
    additionalProperties: false
    description: |
      Configuration to connect to the cluster on AWS.
      Is used when provider is set to `aws`.
    properties:
      key:
        type: string
        description: |
          Path to a `sops` encrypted JSON file that contains the AWS credentials for the
          "deployer" user (with enough rights to get full access to the cluster).
      clusterType:
        type: string
        description: |
          We currently support `kops` and EKS-based cluster on AWS.
        enum:
          - kops
          - eks
      clusterName:
        type: string
        description: |
          Name of the cluster.
      region:
        type: string
        description: |
          The AWS region the cluster is in.
    required:
      - key
      - clusterType
      - clusterName
      - region
  hubs:
    type: array
    description: |
      Each item here is a hub deployed to this cluster.
    required:
      - name
      - domain
      - auth0
      - template
      - config
    items:
      - type: object
        additionalProperties: false
        properties:
          name:
            type: string
            description: |
              Name of the hub. This will be used to determine
              the namespace the hub is deployed to
          domain:
            type: string
            description: |
              Domain the hub should be running on. This domain should resolve
              to the IP of the ingress controller on the cluster - most likely
              via a wildcard DNS entry.

              For example, there's a entry for '*.pilot.2i2c.cloud' pointing to
              the ingress controller of the cluster running hubs in `2i2c.cluster.yaml`.
              Similar for '*.cloudbank.2i2c.cloud', etc.
          template:
            type: string
            description: |
              Template to deploy the hub with. This refers to a directory under
              `hub-templates` containing a helm chart with base values and dependencies
              that determine the kind of hub deployed.
            enum:
              - basehub
              - daskhub
          auth0:
            additionalProperties: false
            type: object
            description: |
              All hubs use Auth0 for authentication, and we dynamically fetch the credentials
              needed for each hub - client_id, client_secret, callback_url - on deploy. This
              block contains configuration on how auth0 should be configured for this hub.
            properties:
              connection:
                type: string
                enum:
                  - google-oauth2
                  - github
                  - ORCID
                  - password
                description: |
                  Authentication method users of the hub can use to log in to the hub.
                  We support a subset of the [connectors](https://auth0.com/docs/identityproviders)
                  that auth0 supports
              application_name:
                type: string
                description: |
                  We make use of an OAuth2 applications in Auth0 and this is the
                  name of that application. Defaults to
                  "<clustername>-<hubname>".

                  See https://manage.auth0.com/dashboard/us/2i2c/applications.
              password:
                type: object
                description: |
                  Configuration specific to a connection of type password.
                properties:
                  database_name:
                    type: string
                    description: |
                      Username and password authentication requires a Auth0
                      database to store the username and passwords in. This is
                      the name of that Auth0 database. Defaults to
                      "<clustername>-<hubname>".

                      See https://manage.auth0.com/dashboard/us/2i2c/connections/database.
            required:
              - connection
          config:
            type: object
            description: |
              YAML configuration that is passed through to helm.
