jupyterhub:
  ingress:
    hosts: [hub.binder.pythia.2i2c.cloud]
    tls:
      - hosts: [hub.binder.pythia.2i2c.cloud]
        secretName: https-auto-tls
  custom:
    2i2c:
      add_staff_user_ids_to_admin_users: false
    binderhubUI:
      enabled: true
    homepage:
      templateVars:
        org:
          name: ""
    singleuserAdmin:
      extraVolumeMounts: []
  singleuser:
    storage:
      type: none
      extraVolumeMounts: []
    initContainers: []
    # The profile list in the common values files needs to be emptied
    # otherwise the launching will fail
    profileList: []
    cmd: jupyter-lab
  hub:
    config:
      BinderSpawnerMixin:
        auth_enabled: false
      JupyterHub:
        authenticator_class: "null"
    # In the common values files this is where fancy profiles gets enabled
    extraConfig: {}
    redirectToServer: false
    services:
      binder: {}
    loadRoles:
      binder:
        services:
          - binder
        scopes:
          - servers
          - admin:users
      user:
        scopes:
          - self
          # Admin users will by default have access:services, so this is only
          # observed to be required for non-admin users.
          - access:services!service=binder
binderhub-service:
  enabled: true
  ingress:
    enabled: true
    hosts: [binder.pythia.2i2c.cloud]
    tls:
      - hosts: [binder.pythia.2i2c.cloud]
        secretName: binder-https-auto-tls
  config:
    GitHubRepoProvider:
      allowed_specs:
        - ^ProjectPythia/.*$
        - binder-examples/requirements
    BinderHub:
      base_url: /
      badge_base_url: https://binder.pythia.2i2c.cloud
      auth_enabled: false
      hub_url: https://hub.binder.pythia.2i2c.cloud
      enable_api_only_mode: false
      banner_message: ""
      about_message: Binder for use with Project Pythia
      image_prefix: quay.io/2i2c-projectpythia/binderhub-ui-
  extraEnv:
    - name: JUPYTERHUB_API_TOKEN
      valueFrom:
        secretKeyRef:
          name: hub
          key: hub.services.binder.apiToken
    - name: JUPYTERHUB_CLIENT_ID
      value: "service-binder"
    - name: JUPYTERHUB_API_URL
      value: "https://hub.binder.pythia.2i2c.cloud/hub/api"
    # Without this, the redirect URL to /hub/api/... gets
    # appended to binderhub's URL instead of the hub's
    - name: JUPYTERHUB_BASE_URL
      value: "https://hub.binder.pythia.2i2c.cloud/"
