{{- if .Values.gcpFilestoreBackups.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gcp-filestore-backups
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app: gcp-filestore-backups
  template:
    metadata:
      labels:
        app: gcp-filestore-backups
    spec:
      serviceAccountName: gcp-filestore-backups-sa
      automountServiceAccountToken: false
      containers:
        - name: gcp-filestore-backups
          image: '{{ .Values.gcpFilestoreBackups.image }}'
          command:
            - python
            - gcp-filestore-backups.py
          args:
            {{- range .Values.gcpFilestoreBackups.filestoreNames | required "gcpFilestoreBackups.filestoreNames is required with gcpFilestoreBackups.enabled set to true" }}
            - '{{ . }}'
            {{- end }}
            - '{{ .Values.gcpFilestoreBackups.project | required "gcpFilestoreBackups.project is required with gcpFilestoreBackups.enabled set to true" }}'
            - '{{ .Values.gcpFilestoreBackups.zone | required "gcpFilestoreBackups.zone is required with gcpFilestoreBackups.enabled set to true" }}'
          securityContext:
            runAsUser: 1000
            allowPrivilegeEscalation: False
            # The image used for gcp-filestore-backups uses gcloud, which wants to
            # write a log file. Without setting readOnlyRootFilesystem = False,
            # gcloud will not have permissions to write it's log file and will
            # fail and crash the pod.
            readOnlyRootFilesystem: False
{{- end -}}
