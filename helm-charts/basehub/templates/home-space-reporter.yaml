{{- if .Values.nfs.enabled }}
# To provide data for the jupyterhub/grafana-dashboards dashboard about free
# space in the shared volume, which contains users home folders etc, we deploy
# prometheus node-exporter to collect this data for prometheus server to scrape.
#
# This is based on the Deployment manifest in jupyterhub/grafana-dashboards'
# readme: https://github.com/jupyterhub/grafana-dashboards#additional-collectors
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shared-volume-metrics
  labels:
    app: jupyterhub
    component: shared-volume-metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyterhub
      component: shared-volume-metrics
  template:
    metadata:
      annotations:
        # This enables prometheus to actually scrape metrics from here
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
      labels:
        app: jupyterhub
        # The component label below should match a grafana dashboard definition
        # in jupyterhub/grafana-dashboards, do not change it!
        component: shared-volume-metrics
    spec:
      containers:
        - name: shared-volume-exporter
          image: quay.io/prometheus/node-exporter:v1.5.0
          args:
            # We only want filesystem stats
            - --collector.disable-defaults
            - --collector.filesystem
            - --web.listen-address=:9100
          ports:
            - containerPort: 9100
              name: metrics
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 65534
            runAsNonRoot: true
            runAsUser: 65534
          volumeMounts:
            - name: shared-volume
              # Mounting under /shared-volume is important as we reference this
              # path in our dashboard definition.
              mountPath: /shared-volume
              # Mount it readonly to prevent accidental writes
              readOnly: true
      securityContext:
        fsGroup: 65534
      volumes:
        # This is the volume that we will mount and monitor. You should reference
        # a shared volume containing home directories etc. This is often a PVC
        # bound to a PV referencing a NFS server.
        - name: shared-volume
          persistentVolumeClaim:
            claimName: home-nfs
{{- end }}
