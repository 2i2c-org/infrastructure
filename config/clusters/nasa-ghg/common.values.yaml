basehub:
  nfs:
    enabled: true
    pv:
      enabled: true
      # from https://docs.aws.amazon.com/efs/latest/ug/mounting-fs-nfs-mount-settings.html
      mountOptions:
        - rsize=1048576
        - wsize=1048576
        - timeo=600
        - soft # We pick soft over hard, so NFS lockups don't lead to hung processes
        - retrans=2
        - noresvport
      serverIP: fs-09bd18b3ca23eefa2.efs.us-west-2.amazonaws.com
      baseShareName: /
  jupyterhub:
    custom:
      2i2c:
        add_staff_user_ids_to_admin_users: true
        add_staff_user_ids_of_type: "github"
      jupyterhubConfigurator:
        enabled: false
      homepage:
        templateVars:
          org:
            name: "U.S. Greenhouse Gas Center"
            logo_url: https://raw.githubusercontent.com/US-GHG-Center/ghgc-docs/b818ba6fdd3c43ede04b110975bf39d248c40df6/Logo/ghg-logo.svg
            url: https://earth.gov/ghgcenter
          designed_by:
            name: "2i2c"
            url: https://2i2c.org
          operated_by:
            name: "2i2c"
            url: https://2i2c.org
          funded_by:
            name: "U.S. Greenhouse Gas Center"
            url: https://earth.gov/ghgcenter
    hub:
      allowNamedServers: true
      config:
        JupyterHub:
          authenticator_class: github
        GitHubOAuthenticator:
          allowed_organizations:
            - US-GHG-Center:ghgc-hub-access
            - US-GHG-Center:ghg-use-case-1
            - US-GHG-Center:ghg-use-case-2
            - US-GHG-Center:ghg-use-case-3
            - US-GHG-Center:ghg-external-collaborators
            - US-GHG-Center:ghg-workshop-access
            - US-GHG-Center:ghg-trial-access
          scope:
            - read:org
        Authenticator:
          admin_users:
            - freitagb
            - j08lue
            - slesaad
            - Jeanne-le-Roux
    singleuser:
      defaultUrl: /lab
      profileList:
        - display_name: "Modified Pangeo Notebook"
          slug: modified-pangeo
          description: Pangeo based notebook with a Python environment
          default: true
          kubespawner_override:
            image: public.ecr.aws/nasa-veda/nasa-veda-singleuser:2024-04-09
          profile_options: &profile_options
            resource_allocation: &profile_options_resource_allocation
              display_name: Resource Allocation
              choices:
                # The `cpu_` options are added by hand, temporarily,
                # to help evaluate ideal resource options for an upcoming workshop.
                # See: https://github.com/NASA-IMPACT/veda-jupyterhub/issues/32
                # Once we settle on the ideal resource allocation for the workshop, we should:
                #  - Create a new profile for the workshop, with just the resource option needed
                #  - Pick a more appropriate (compute-optimized) node type and add to eksctl
                #  - Remove these options from the global resource select options
                #  - Remove this comment.
                cpu_8_16:
                  display_name: 8 CPU, 16GB RAM
                  kubespawner_override:
                    mem_guarantee: 14.87G
                    mem_limit: 14.87G
                    cpu_guarantee: 8
                    cpu_limit: 8
                    node_selector:
                      node.kubernetes.io/instance-type: r5.4xlarge
                cpu_12_16:
                  display_name: 12 CPU, 16GB RAM
                  kubespawner_override:
                    mem_guarantee: 14.87G
                    mem_limit: 14.87G
                    cpu_guarantee: 12
                    cpu_limit: 12
                    node_selector:
                      node.kubernetes.io/instance-type: r5.4xlarge
                cpu_8_24:
                  display_name: 8 CPU, 24GB RAM
                  kubespawner_override:
                    mem_guarantee: 22.305G
                    mem_limit: 22.305G
                    cpu_guarantee: 8
                    cpu_limit: 8
                    node_selector:
                      node.kubernetes.io/instance-type: r5.4xlarge
                cpu_12_24:
                  display_name: 12 CPU, 24GB RAM
                  kubespawner_override:
                    mem_guarantee: 22.305G
                    mem_limit: 22.305G
                    cpu_guarantee: 12
                    cpu_limit: 12
                    node_selector:
                      node.kubernetes.io/instance-type: r5.4xlarge
                mem_1_9:
                  display_name: 1.9 GB RAM, upto 3.7 CPUs
                  kubespawner_override:
                    mem_guarantee: 1991244775
                    mem_limit: 1991244775
                    cpu_guarantee: 0.2328125
                    cpu_limit: 3.725
                    node_selector:
                      node.kubernetes.io/instance-type: r5.xlarge
                  default: true
                mem_3_7:
                  display_name: 3.7 GB RAM, upto 3.7 CPUs
                  kubespawner_override:
                    mem_guarantee: 3982489550
                    mem_limit: 3982489550
                    cpu_guarantee: 0.465625
                    cpu_limit: 3.725
                    node_selector:
                      node.kubernetes.io/instance-type: r5.xlarge
                mem_7_4:
                  display_name: 7.4 GB RAM, upto 3.7 CPUs
                  kubespawner_override:
                    mem_guarantee: 7964979101
                    mem_limit: 7964979101
                    cpu_guarantee: 0.93125
                    cpu_limit: 3.725
                    node_selector:
                      node.kubernetes.io/instance-type: r5.xlarge
                mem_14_8:
                  display_name: 14.8 GB RAM, upto 3.7 CPUs
                  kubespawner_override:
                    mem_guarantee: 15929958203
                    mem_limit: 15929958203
                    cpu_guarantee: 1.8625
                    cpu_limit: 3.725
                    node_selector:
                      node.kubernetes.io/instance-type: r5.xlarge
                mem_29_7:
                  display_name: 29.7 GB RAM, upto 3.7 CPUs
                  kubespawner_override:
                    mem_guarantee: 31859916406
                    mem_limit: 31859916406
                    cpu_guarantee: 3.725
                    cpu_limit: 3.725
                    node_selector:
                      node.kubernetes.io/instance-type: r5.xlarge
                mem_60_6:
                  display_name: 60.6 GB RAM, upto 15.6 CPUs
                  kubespawner_override:
                    mem_guarantee: 65094448840
                    mem_limit: 65094448840
                    cpu_guarantee: 7.8475
                    cpu_limit: 15.695
                    node_selector:
                      node.kubernetes.io/instance-type: r5.4xlarge
                mem_121_2:
                  display_name: 121.2 GB RAM, upto 15.6 CPUs
                  kubespawner_override:
                    mem_guarantee: 130188897681
                    mem_limit: 130188897681
                    cpu_guarantee: 15.695
                    cpu_limit: 15.695
                    node_selector:
                      node.kubernetes.io/instance-type: r5.4xlarge
        - display_name: "Rocker Geospatial with RStudio"
          slug: rocker
          description: R environment with many geospatial libraries pre-installed
          kubespawner_override:
            image: rocker/binder:4.3
            image_pull_policy: Always
            # Launch RStudio after the user logs in
            default_url: /rstudio
            # Ensures container working dir is homedir
            # https://github.com/2i2c-org/infrastructure/issues/2559
            working_dir: /home/rstudio
          profile_options: *profile_options
        - display_name: "QGIS on Linux Desktop"
          slug: qgis
          description: Linux desktop in the browser, with qgis installed
          kubespawner_override:
            default_url: /desktop
            # Built from https://github.com/2i2c-org/nasa-qgis-image
            image: quay.io/2i2c/nasa-qgis-image:0d0765090250
          profile_options: *profile_options
        - display_name: "Bring your own image"
          description: Specify your own docker image (must have python and jupyterhub installed in it)
          slug: custom
          profile_options:
            image:
              display_name: Image
              unlisted_choice:
                enabled: True
                display_name: "Custom image"
                validation_regex: "^.+:.+$"
                validation_message: "Must be a publicly available docker image, of form <image-name>:<tag>"
                kubespawner_override:
                  image: "{value}"
              choices: {}
            resource_allocation: *profile_options_resource_allocation
    scheduling:
      userScheduler:
        enabled: true
