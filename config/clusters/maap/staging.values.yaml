nfs:
  pv:
    serverIP: 10.100.66.17
userServiceAccount:
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::916098889494:role/maap-staging
jupyterhub:
  custom:
    2i2c:
      add_staff_user_ids_to_admin_users: false
  singleuser:
    extraEnv:
      SCRATCH_BUCKET: s3://maap-scratch-staging/$(JUPYTERHUB_USER)
    nodeSelector:
      2i2c/hub-name: staging
    initContainers:
    - &volume_ownership_fix_initcontainer
      name: volume-mount-ownership-fix
      image: busybox:1.36.1
      command:
      - sh
      - -c
      - >
        id &&
        chown 1000:1000 /home/jovyan /home/jovyan/shared /home/jovyan/shared-public &&
        chown 1000:1000 /home/jovyan/shared-group/* &&
        ls -lhd /home/jovyan
      securityContext:
        runAsUser: 0
      volumeMounts:
      - name: home
        mountPath: /home/jovyan
        subPath: '{escaped_username}'
        # Mounted without readonly attribute here,
        # so we can chown it appropriately
      - name: home
        mountPath: /home/jovyan/shared
        subPath: _shared
      - name: home
        mountPath: /home/jovyan/shared-public
        subPath: _shared-public
      - name: home
        mountPath: /home/jovyan/shared-group/CPU_L
        subPath: _shared-group/CPU_L
      - name: home
        mountPath: /home/jovyan/shared-group/GPU_T4
        subPath: _shared-group/GPU_T4
    storage:
      type:

    profileList:
    - display_name: Choose your environment and resources
      default: true
      profile_options:
        image:
          display_name: Environment
          dynamic_image_building:
            enabled: true
          unlisted_choice:
            enabled: true
            display_name: Custom image
            validation_regex: ^.+:.+$
            validation_message: Must be a publicly available docker image, of form <image-name>:<tag>
            kubespawner_override:
              image: '{value}'
          choices:
            01-modify-pangeo:
              display_name: Modified Pangeo Notebook
              description: Pangeo based notebook with a Python environment
              kubespawner_override:
                image: public.ecr.aws/nasa-veda/pangeo-notebook-veda-image:2024.11.11-v1
                init_containers:
                    # Need to explicitly fix ownership here, as otherwise these directories will be owned
                    # by root on most NFS filesystems - neither EFS nor Google Filestore support anonuid
                - *volume_ownership_fix_initcontainer
                    # this container uses nbgitpuller to mount https://github.com/NASA-IMPACT/veda-docs/ for user pods
                    # image source: https://github.com/NASA-IMPACT/jupyterhub-gitpuller-init
                - name: jupyterhub-gitpuller-init
                  image: public.ecr.aws/nasa-veda/jupyterhub-gitpuller-init:97eb45f9d23b128aff810e45911857d5cffd05c2
                  env:
                  - name: TARGET_PATH
                    value: veda-docs
                  - name: SOURCE_REPO
                    value: https://github.com/NASA-IMPACT/veda-docs
                  volumeMounts:
                  - name: home
                    mountPath: /home/jovyan
                    subPath: '{escaped_username}'
                  securityContext:
                    runAsUser: 1000
                    runAsGroup: 1000
            02-rocker:
              display_name: Rocker Geospatial with RStudio
              description: R environment with many geospatial libraries pre-installed
              kubespawner_override:
                image: rocker/binder:4.4
                image_pull_policy: Always
                  # Launch RStudio after the user logs in
                default_url: /rstudio
                  # Ensures container working dir is homedir
                  # https://github.com/2i2c-org/infrastructure/issues/2559
                working_dir: /home/rstudio
            03-qgis:
              display_name: QGIS on Linux Desktop
              description: Linux desktop in the browser, with qgis installed
              kubespawner_override:
                  # Launch people directly into the Linux desktop when they start
                default_url: /desktop
                  # Built from https://github.com/2i2c-org/nasa-qgis-image
                image: quay.io/2i2c/nasa-qgis-image:d76118ea0c15
        resource_allocation:
          display_name: Resource Allocation
          choices:
            mem_1_9:
              display_name: 1.9 GB RAM, upto 3.7 CPUs
              allowed_groups:
              - CPU:XS
              kubespawner_override:
                mem_guarantee: 1991244775
                mem_limit: 1991244775
                cpu_guarantee: 0.2328125
                cpu_limit: 3.725
                node_selector:
                  node.kubernetes.io/instance-type: r5.xlarge
              default: true
            mem_3_7:
              display_name: 3.7 GB RAM, upto 3.7 CPUs
              allowed_groups:
              - CPU:S
              kubespawner_override:
                mem_guarantee: 3982489550
                mem_limit: 3982489550
                cpu_guarantee: 0.465625
                cpu_limit: 3.725
                node_selector:
                  node.kubernetes.io/instance-type: r5.xlarge
            mem_7_4:
              display_name: 7.4 GB RAM, upto 3.7 CPUs
              allowed_groups:
              - CPU:M
              kubespawner_override:
                mem_guarantee: 7964979101
                mem_limit: 7964979101
                cpu_guarantee: 0.93125
                cpu_limit: 3.725
                node_selector:
                  node.kubernetes.io/instance-type: r5.xlarge
            mem_14_8:
              display_name: 14.8 GB RAM, upto 3.7 CPUs
              allowed_groups:
              - CPU:L
              kubespawner_override:
                mem_guarantee: 15929958203
                mem_limit: 15929958203
                cpu_guarantee: 1.8625
                cpu_limit: 3.725
                node_selector:
                  node.kubernetes.io/instance-type: r5.xlarge
            mem_29_7:
              display_name: 29.7 GB RAM, upto 3.7 CPUs
              allowed_groups:
              - CPU:XL
              kubespawner_override:
                mem_guarantee: 31859916406
                mem_limit: 31859916406
                cpu_guarantee: 3.725
                cpu_limit: 3.725
                node_selector:
                  node.kubernetes.io/instance-type: r5.xlarge
            mem_60_6:
              display_name: 60.6 GB RAM, upto 15.6 CPUs
              allowed_groups:
              - CPU:XXL
              kubespawner_override:
                mem_guarantee: 65094448840
                mem_limit: 65094448840
                cpu_guarantee: 7.8475
                cpu_limit: 15.695
                node_selector:
                  node.kubernetes.io/instance-type: r5.4xlarge
            mem_121_2:
              display_name: 121.2 GB RAM, upto 15.6 CPUs
              allowed_groups:
              - CPU:XXXL
              kubespawner_override:
                mem_guarantee: 130188897681
                mem_limit: 130188897681
                cpu_guarantee: 15.695
                cpu_limit: 15.695
                node_selector:
                  node.kubernetes.io/instance-type: r5.4xlarge
    - display_name: NVIDIA Tesla T4, ~16 GB, ~4 CPUs
      description: Start a container on a dedicated node with a GPU
      slug: gpu
      allowed_groups:
      - GPU:T4
      profile_options:
        image:
          display_name: Environment
          dynamic_image_building:
            enabled: true
          unlisted_choice:
            enabled: true
            display_name: Custom image
            validation_regex: ^.+:.+$
            validation_message: Must be a publicly available docker image of form <image-name>:<tag>
            kubespawner_override:
              image: '{value}'
          choices:
            pytorch:
              display_name: Pangeo PyTorch ML Notebook
              default: false
              slug: pytorch
              kubespawner_override:
                image: quay.io/pangeo/pytorch-notebook:2024.11.11
            tensorflow2:
              display_name: Pangeo Tensorflow2 ML Notebook
              default: true
              slug: tensorflow2
              kubespawner_override:
                image: quay.io/pangeo/ml-notebook:2024.11.11
      kubespawner_override:
        environment:
          NVIDIA_DRIVER_CAPABILITIES: compute,utility
        mem_limit:
        mem_guarantee: 14G
        node_selector:
          node.kubernetes.io/instance-type: g4dn.xlarge
        extra_resource_limits:
          nvidia.com/gpu: '1'
  hub:
    config:
      JupyterHub:
        authenticator_class: generic-oauth
      KubeSpawner:
        volumes:
          00-home-nfs:
            name: home
            persistentVolumeClaim:
              claimName: home-nfs
          01-dev-shm:
            name: dev-shm
            emptyDir:
              medium: Memory
          02-extra-files:
            name: files
            secret:
              secretName: singleuser
              items:
              - key: ghsa-w3vc-fx9p-wp4v-check-patch-run
                mode: 493
                path: ghsa-w3vc-fx9p-wp4v-check-patch-run
              - key: ipython_kernel_config.json
                path: ipython_kernel_config.json
              - key: jupyter_notebook_config.json
                path: jupyter_notebook_config.json
              - key: jupyter_server_config.json
                path: jupyter_server_config.json
          03-shared-group:
            name: shared-group-placeholder
            emptyDir:
              medium: Memory
              sizeLimit: 1Mi
        volume_mounts:
          00-home-nfs:
            name: home
            mountPath: /home/jovyan
            subPath: '{escaped_username}'
          01-home-shared:
            name: home
            mountPath: /home/jovyan/shared
            subPath: _shared
            readOnly: true
          02-home-shared-group:
            # overrides the root of the shared-group folder with an empty dir
            # so that the user can't see the contents of other groups' folders
            # that the user is not a member of
            name: shared-group-placeholder
            mountPath: /home/jovyan/shared-group
          03-home-shared-public:
            name: home
            mountPath: /home/jovyan/shared-public
            subPath: _shared-public
          04-dev-shm:
            name: dev-shm
            mountPath: /dev/shm
          05-mount-ghsa-patch:
            name: files
            mountPath: /mnt/ghsa-w3vc-fx9p-wp4v/check-patch-run
            subPath: ghsa-w3vc-fx9p-wp4v-check-patch-run
          06-mount-ipython-config:
            name: files
            mountPath: /usr/local/etc/ipython/ipython_kernel_config.json
            subPath: ipython_kernel_config.json
          07-mount-jupyter-notebook-config:
            name: files
            mountPath: /usr/local/etc/jupyter/jupyter_notebook_config.json
            subPath: jupyter_notebook_config.json
          08-mount-jupyter-server-config:
            name: files
            mountPath: /usr/local/etc/jupyter/jupyter_server_config.json
            subPath: jupyter_server_config.json
        group_overrides:
          # Explicitly mount the shared group folders based on group membership
          00-group-CPU-L-extra-volume-mounts:
            groups: [CPU:L]
            spawner_override:
              volume_mounts:
                00-group-CPU-L-extra-volume-mounts:
                  name: home
                  mountPath: /home/jovyan/shared-group/CPU_L
                  subPath: _shared-group/CPU_L
          01-group-GPU-T4-extra-volume-mounts:
            groups: [GPU:T4]
            spawner_override:
              volume_mounts:
                01-group-GPU-T4-extra-volume-mounts:
                  name: home
                  mountPath: /home/jovyan/shared-group/GPU_T4
                  subPath: _shared-group/GPU_T4
      Authenticator:
        admin_users: []
      GitHubOAuthenticator:
        oauth_callback_url: https://staging.hub.maap.2i2c.cloud/hub/oauth_callback
      GenericOAuthenticator:
        oauth_callback_url: https://staging.hub.maap.2i2c.cloud/hub/oauth_callback
        token_url: https://keycloak.delta-backend.xyz/realms/veda/protocol/openid-connect/token
        authorize_url: https://keycloak.delta-backend.xyz/realms/veda/protocol/openid-connect/auth
        # We want to get user data from the JWT that's the id token,
        # not from a separate userdata API call
        userdata_from_id_token: true
        scope:
        - basic
        - profile
        - openid
        username_claim: preferred_username
        manage_groups: true
        auth_state_groups_key: oauth_user.roles
        admin_groups:
        - Admin
        # Being granted *any* jupyterhub related role should allow you
        # to login
        allowed_groups:
        - Admin
        - CPU:XS
        - CPU:S
        - CPU:M
        - CPU:L
        - CPU:XL
        - CPU:XXL
        - CPU:XXXL
        - GPU:T4
  ingress:
    hosts: [staging.hub.maap.2i2c.cloud]
    tls:
    - hosts: [staging.hub.maap.2i2c.cloud]
      secretName: https-auto-tls

dask-gateway:
  gateway:
    backend:
      scheduler:
        extraPodConfig:
          nodeSelector:
            2i2c/hub-name: staging
      worker:
        extraPodConfig:
          node_selector:
            2i2c/hub-name: staging
      imagePullSecrets: [name: image-pull-secret]

binderhub-service:
  dockerApi:
    nodeSelector:
      2i2c/hub-name: staging
  config:
    KubernetesBuildExecutor:
      node_selector:
        2i2c/hub-name: staging
    BinderHub:
      image_prefix: quay.io/imagebuilding-non-gcp-hubs/maap-staging-

jupyterhub-home-nfs:
  eks:
    volumeId: vol-043cd887a98827319
  quotaEnforcer:
    hardQuota: '1' # in GB
