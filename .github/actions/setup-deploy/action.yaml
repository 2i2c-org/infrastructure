# This is a _local composite GitHub action_ that helps us reuse CI logic across
# different workflows and jobs by referencing this action in a job's step.
#
# > A composite action allows you to combine multiple workflow steps within one
# > action.
#
# This local action can be referenced like this from a job:
#
#   steps:
#     - uses: ./.github/actions/setup-deploy
#       with:
#         provider: gcp
#         GCP_KMS_DECRYPTOR_KEY: ${{ secrets.GCP_KMS_DECRYPTOR_KEY }}
#
# General action configuration reference:
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#about-yaml-syntax-for-github-actions
#
name: Setup the deployer script for use to deploy
description: >-
  Setups the deployer script by loading credentials and installing library
  dependencies and relevant tools needed to interact with encrypted files,
  kubernetes clusters, and container registries. `gcloud` already available in
  the github virtual environment is not re-installed but `helm` is pinned to
  avoid issues of a changing version.

# inputs configuration reference:
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#inputs
#
inputs:
  provider:
    description: Cloud provider a cluster runs on
    required: true
    default: gcp
  GCP_KMS_DECRYPTOR_KEY:
    description: >-
      A Google Cloud Service Account Key with KMS Decryption privileges. This allows
      us to unlock our sops-encrypted secrets required for a deploy.
    required: true

# runs (for composite actions) configuration reference:
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runs-for-composite-actions
#
# Note that while this section looks almost like the steps of a job in a
# workflow, it is different!
#
runs:
  using: composite
  steps:
  - uses: actions/setup-python@v5
    with:
      python-version: '3.13'
  - uses: actions/setup-go@v5

    # There will always be a cache hit on the cache key when this composite
    # action is run, as its only done after the "generate-jobs" job has been run
    # which will save a cache.
  - name: Restore pip's install cache
    uses: actions/cache@v4
    with:
      path: ~/.cache/pip
        # key determines if we define or reuse an existing cache or not. Our
        # key ensure we cache within a workflow run and its attempts, but not
        # between workflow runs.
      key: ${{ github.run_id }}

  - name: Install the deployer + go dependency
    run: |
      pip install --editable .
      go install github.com/google/go-jsonnet/cmd/jsonnet@v0.20.0
    shell: bash

    # This action use the github official cache mechanism internally
  - uses: azure/setup-helm@v4
    with:
        # Manually update a pinning of helm to a minor version based on:
        #
        # - it seems to work
        # - to avoid falling behind
        #
        # Related:
        #
        # - helm versions: https://github.com/helm/helm/releases
        #
      version: v3.14.4

    # Manually update a pinning of kubectl to a minor version based on:
    #
    # - the current range of k8s version in our k8s clusters, as of 2024-04-17,
    #   this is k8s 1.27 - 1.29
    # - the next expected change in this range, as of 2024-04-17, is to expand
    #   to include 1.30
    # - the kubectl <-> k8s api-server skew policy of +/- one minor version
    # - the policy of attempting to update our kubectl version here to be +/-
    #   one minor versions of future k8s clusters additions or upgrades, so that
    #   additions or upgrades of k8s clusters aren't unexpectedly held back
    #
    # As an example, we upgraded to kubectl to version 1.24 before we
    # added/upgraded a k8s cluster to version 1.25.
    #
    # Related:
    #
    # - k8s versions: https://kubernetes.io/releases/
    # - Kubectl version skew policy: https://kubernetes.io/releases/version-skew-policy/#kubectl
    # - 2i2c, k8s upgrades tracked: https://github.com/2i2c-org/infrastructure/issues/2293
    # - 2i2c, historical issue: https://github.com/2i2c-org/infrastructure/issues/1271
    #
  - uses: azure/setup-kubectl@v4
    with:
      version: v1.28.8

    # This action use the github official cache mechanism internally
  - name: Install sops
    uses: mdgreenwald/mozilla-sops-action@v1.6.0

    # Install pre-requisite for "gcloud container clusters get-credentials"
    # command with a modern k8s client.
    #
    # A manual install step has been needed as they opted to not provide it in
    # the github-runner image. See
    # https://github.com/actions/runner-images/issues/5925#issuecomment-1216417721.
    #
  - name: Install gke-gcloud-auth-plugin
    if: inputs.provider == 'gcp'
    run: |
      echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
      curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -

      sudo apt-get update -y
      sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin
    shell: bash

  - name: Setup sops credentials to decrypt repo secrets
    uses: google-github-actions/auth@v3
    with:
      credentials_json: ${{ inputs.GCP_KMS_DECRYPTOR_KEY }}
