{{- /* Generated with https://patorjk.com/software/taag/#p=display&h=0&f=Slant&t=BinderHub */}}
. ____ _ _      __   _____         _____  ___                   
 / __ `/| | /| / /  / ___/ ______ / ___/ / _ \ ______           
/ /_/ / | |/ |/ /  (__  ) /_____// /__  /  __//_____/           
\__,_/  |__/|__/  /____/     ____\___/  \___/                   
   ____ _   _____  ____ _   / __/  ____ _   ____   ____ _       
  / __ `/  / ___/ / __ `/  / /_   / __ `/  / __ \ / __ `/ ______
 / /_/ /  / /    / /_/ /  / __/  / /_/ /  / / / // /_/ / /_____/
 \__, /  /_/     \__,_/  /_/     \__,_/  /_/ /_/ \__,_/         
/____/                     __                       __          
   / /_   ____ _  _____   / /__  ___    ____   ____/ /          
  / __ \ / __ `/ / ___/  / //_/ / _ \  / __ \ / __  /           
 / /_/ // /_/ / / /__   / ,<   /  __/ / / / // /_/ /            
/_.___/ \__,_/  \___/  /_/|_|  \___/ /_/ /_/ \__,_/             

You have successfully installed the AWS Cost Explorer Grafana Backend Helm chart!

### Installation info

  - Kubernetes namespace: {{ .Release.Namespace }}
  - Helm release name:    {{ .Release.Name }}
  - Helm chart version:   {{ .Chart.Version }}
  - Python packages:      See https://github.com/2i2c-org/aws-ce-grafana-backend/blob/{{ include "aws-ce-grafana-backend.chart-version-to-git-ref" .Chart.Version }}/images/aws-ce-grafana-backend/requirements.txt

### Followup links

  - Documentation:  https://github.com/2i2c-org/aws-ce-grafana-backend#readme
  - Issue tracking: https://github.com/2i2c-org/aws-ce-grafana-backend/issues

### Post-installation checklist

  - Verify that created Pods enter a Running state:

      kubectl --namespace={{ .Release.Namespace }} get pod

    If a pod is stuck with a Pending or ContainerCreating status, diagnose with:

      kubectl --namespace={{ .Release.Namespace }} describe pod <name of pod>

    If a pod keeps restarting, diagnose with:

      kubectl --namespace={{ .Release.Namespace }} logs --previous <name of pod>
  {{- println }}



{{- /*
  Breaking changes.
*/}}

{{- $breaking := "" }}
{{- $breaking_title := "\n" }}
{{- $breaking_title = print $breaking_title "\n#################################################################################" }}
{{- $breaking_title = print $breaking_title "\n######   BREAKING: The config values passed contained no longer accepted    #####" }}
{{- $breaking_title = print $breaking_title "\n######             options. See the messages below for more details.        #####" }}
{{- $breaking_title = print $breaking_title "\n######                                                                      #####" }}
{{- $breaking_title = print $breaking_title "\n######             To verify your updated config is accepted, you can use   #####" }}
{{- $breaking_title = print $breaking_title "\n######             the `helm template` command.                             #####" }}
{{- $breaking_title = print $breaking_title "\n#################################################################################" }}


{{- /*
  This is an example (in a helm template comment) on how to detect and
  communicate with regards to a breaking chart config change.

  {{- if hasKey .Values.singleuser.cloudMetadata "enabled" }}
  {{- $breaking = print $breaking "\n\nCHANGED: singleuser.cloudMetadata.enabled must as of 1.0.0 be configured using singleuser.cloudMetadata.blockWithIptables with the opposite value." }}
  {{- end }}
*/}}

{{- if $breaking }}
{{- fail (print $breaking_title $breaking "\n\n") }}
{{- end }}
