{{- if .Values.dex.enabled -}}
kind: ConfigMap
apiVersion: v1
metadata:
  name: dex
  labels:
    app: dex
data:
  dex.yaml: |
    # dex expands env vars in values, but does *not* interpolate
    # them. So we can use an env var for OAUTH2_CLIENT_SECRET as
    # it is just an expansion, but can not use env vars when constructing
    # URLs as there's no interpolation! grr.
    issuer: https://{{ .Values.dex.hubHostName }}/services/dex
    storage:
      type: sqlite3
      config:
        # /srv/db is a PVC mounted for persistence
        file: /srv/db/dex.sqlite

    web:
      # Listen on all interfaces, so this is publicly visible
      http: 0.0.0.0:5556

    oauth2:
      # Don't explicitly require users to grant access via the
      # dex interface, for a smoother interface
      skipApprovalScreen: true

    connectors:
    - type: oauth
      id: hub
      name: hub
      config:
        # Connector config values starting with a "$" will read from the environment.
        clientID: service-dex
        clientSecret:  $HUB_OAUTH2_CLIENT_SECRET
        redirectURI: https://{{ .Values.dex.hubHostName }}/services/dex/callback
        userIDKey: name
        tokenURL: http://proxy-public/hub/api/oauth2/token
        authorizationURL: https://{{ .Values.dex.hubHostName }}/hub/api/oauth2/authorize
        userInfoURL: http://proxy-public/hub/api/user

    staticClients:
    - id: oauth2-proxy
      redirectURIs:
      -  https://{{ .Values.dex.hubHostName }}/services/oauth2-proxy/oauth2/callback
      name: oauth2-proxy
      secret: $OAUTH2_PROXY_CLIENT_SECRET
  oauth2-proxy.cfg: |
    provider = "oidc"
    client_id = "oauth2-proxy"
    redirect_url = "https://{{ .Values.dex.hubHostName }}/services/oauth2-proxy/oauth2/callback"
    oidc_issuer_url = "https://{{ .Values.dex.hubHostName }}/services/dex"
    oidc_email_claim = "sub"
    insecure_oidc_allow_unverified_email = true
    email_domains = "*"
    http_address = "http://0.0.0.0:9000"
    skip_provider_button = true
{{- end }}
